".source.js":
 "eslint-disable accessor-pairs":
  prefix: "accessor-pairs eslint-disable"
  body: '''
   /* eslint-disable accessor-pairs */
   $1
   /* eslint-enable accessor-pairs */
  '''
  description: "enforce getter and setter pairs in objects"
 "eslint-disable-next-line accessor-pairs":
  prefix: "accessor-pairs eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line accessor-pairs
   $1
  '''
  description: "enforce getter and setter pairs in objects"
 "eslint-rule/accessor-pairs":
  prefix: "accessor-pairs"
  body: "accessor-pairs"
  description: "enforce getter and setter pairs in objects"
 "eslint-disable array-bracket-newline":
  prefix: "array-bracket-newline eslint-disable"
  body: '''
   /* eslint-disable array-bracket-newline */
   $1
   /* eslint-enable array-bracket-newline */
  '''
  description: "enforce linebreaks after opening and before closing array brackets"
 "eslint-disable-next-line array-bracket-newline":
  prefix: "array-bracket-newline eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line array-bracket-newline
   $1
  '''
  description: "enforce linebreaks after opening and before closing array brackets"
 "eslint-rule/array-bracket-newline":
  prefix: "array-bracket-newline"
  body: "array-bracket-newline"
  description: "enforce linebreaks after opening and before closing array brackets"
 "eslint-disable array-bracket-spacing":
  prefix: "array-bracket-spacing eslint-disable"
  body: '''
   /* eslint-disable array-bracket-spacing */
   $1
   /* eslint-enable array-bracket-spacing */
  '''
  description: "enforce consistent spacing inside array brackets"
 "eslint-disable-next-line array-bracket-spacing":
  prefix: "array-bracket-spacing eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line array-bracket-spacing
   $1
  '''
  description: "enforce consistent spacing inside array brackets"
 "eslint-rule/array-bracket-spacing":
  prefix: "array-bracket-spacing"
  body: "array-bracket-spacing"
  description: "enforce consistent spacing inside array brackets"
 "eslint-disable array-callback-return":
  prefix: "array-callback-return eslint-disable"
  body: '''
   /* eslint-disable array-callback-return */
   $1
   /* eslint-enable array-callback-return */
  '''
  description: "enforce `return` statements in callbacks of array methods"
 "eslint-disable-next-line array-callback-return":
  prefix: "array-callback-return eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line array-callback-return
   $1
  '''
  description: "enforce `return` statements in callbacks of array methods"
 "eslint-rule/array-callback-return":
  prefix: "array-callback-return"
  body: "array-callback-return"
  description: "enforce `return` statements in callbacks of array methods"
 "eslint-disable array-element-newline":
  prefix: "array-element-newline eslint-disable"
  body: '''
   /* eslint-disable array-element-newline */
   $1
   /* eslint-enable array-element-newline */
  '''
  description: "enforce line breaks after each array element"
 "eslint-disable-next-line array-element-newline":
  prefix: "array-element-newline eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line array-element-newline
   $1
  '''
  description: "enforce line breaks after each array element"
 "eslint-rule/array-element-newline":
  prefix: "array-element-newline"
  body: "array-element-newline"
  description: "enforce line breaks after each array element"
 "eslint-disable arrow-body-style":
  prefix: "arrow-body-style eslint-disable"
  body: '''
   /* eslint-disable arrow-body-style */
   $1
   /* eslint-enable arrow-body-style */
  '''
  description: "require braces around arrow function bodies"
 "eslint-disable-next-line arrow-body-style":
  prefix: "arrow-body-style eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line arrow-body-style
   $1
  '''
  description: "require braces around arrow function bodies"
 "eslint-rule/arrow-body-style":
  prefix: "arrow-body-style"
  body: "arrow-body-style"
  description: "require braces around arrow function bodies"
 "eslint-disable arrow-parens":
  prefix: "arrow-parens eslint-disable"
  body: '''
   /* eslint-disable arrow-parens */
   $1
   /* eslint-enable arrow-parens */
  '''
  description: "require parentheses around arrow function arguments"
 "eslint-disable-next-line arrow-parens":
  prefix: "arrow-parens eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line arrow-parens
   $1
  '''
  description: "require parentheses around arrow function arguments"
 "eslint-rule/arrow-parens":
  prefix: "arrow-parens"
  body: "arrow-parens"
  description: "require parentheses around arrow function arguments"
 "eslint-disable arrow-spacing":
  prefix: "arrow-spacing eslint-disable"
  body: '''
   /* eslint-disable arrow-spacing */
   $1
   /* eslint-enable arrow-spacing */
  '''
  description: "enforce consistent spacing before and after the arrow in arrow functions"
 "eslint-disable-next-line arrow-spacing":
  prefix: "arrow-spacing eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line arrow-spacing
   $1
  '''
  description: "enforce consistent spacing before and after the arrow in arrow functions"
 "eslint-rule/arrow-spacing":
  prefix: "arrow-spacing"
  body: "arrow-spacing"
  description: "enforce consistent spacing before and after the arrow in arrow functions"
 "eslint-disable block-scoped-var":
  prefix: "block-scoped-var eslint-disable"
  body: '''
   /* eslint-disable block-scoped-var */
   $1
   /* eslint-enable block-scoped-var */
  '''
  description: "enforce the use of variables within the scope they are defined"
 "eslint-disable-next-line block-scoped-var":
  prefix: "block-scoped-var eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line block-scoped-var
   $1
  '''
  description: "enforce the use of variables within the scope they are defined"
 "eslint-rule/block-scoped-var":
  prefix: "block-scoped-var"
  body: "block-scoped-var"
  description: "enforce the use of variables within the scope they are defined"
 "eslint-disable block-spacing":
  prefix: "block-spacing eslint-disable"
  body: '''
   /* eslint-disable block-spacing */
   $1
   /* eslint-enable block-spacing */
  '''
  description: "enforce consistent spacing inside single-line blocks"
 "eslint-disable-next-line block-spacing":
  prefix: "block-spacing eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line block-spacing
   $1
  '''
  description: "enforce consistent spacing inside single-line blocks"
 "eslint-rule/block-spacing":
  prefix: "block-spacing"
  body: "block-spacing"
  description: "enforce consistent spacing inside single-line blocks"
 "eslint-disable brace-style":
  prefix: "brace-style eslint-disable"
  body: '''
   /* eslint-disable brace-style */
   $1
   /* eslint-enable brace-style */
  '''
  description: "enforce consistent brace style for blocks"
 "eslint-disable-next-line brace-style":
  prefix: "brace-style eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line brace-style
   $1
  '''
  description: "enforce consistent brace style for blocks"
 "eslint-rule/brace-style":
  prefix: "brace-style"
  body: "brace-style"
  description: "enforce consistent brace style for blocks"
 "eslint-disable callback-return":
  prefix: "callback-return eslint-disable"
  body: '''
   /* eslint-disable callback-return */
   $1
   /* eslint-enable callback-return */
  '''
  description: "require `return` statements after callbacks"
 "eslint-disable-next-line callback-return":
  prefix: "callback-return eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line callback-return
   $1
  '''
  description: "require `return` statements after callbacks"
 "eslint-rule/callback-return":
  prefix: "callback-return"
  body: "callback-return"
  description: "require `return` statements after callbacks"
 "eslint-disable camelcase":
  prefix: "camelcase eslint-disable"
  body: '''
   /* eslint-disable camelcase */
   $1
   /* eslint-enable camelcase */
  '''
  description: "enforce camelcase naming convention"
 "eslint-disable-next-line camelcase":
  prefix: "camelcase eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line camelcase
   $1
  '''
  description: "enforce camelcase naming convention"
 "eslint-rule/camelcase":
  prefix: "camelcase"
  body: "camelcase"
  description: "enforce camelcase naming convention"
 "eslint-disable capitalized-comments":
  prefix: "capitalized-comments eslint-disable"
  body: '''
   /* eslint-disable capitalized-comments */
   $1
   /* eslint-enable capitalized-comments */
  '''
  description: "enforce or disallow capitalization of the first letter of a comment"
 "eslint-disable-next-line capitalized-comments":
  prefix: "capitalized-comments eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line capitalized-comments
   $1
  '''
  description: "enforce or disallow capitalization of the first letter of a comment"
 "eslint-rule/capitalized-comments":
  prefix: "capitalized-comments"
  body: "capitalized-comments"
  description: "enforce or disallow capitalization of the first letter of a comment"
 "eslint-disable class-methods-use-this":
  prefix: "class-methods-use-this eslint-disable"
  body: '''
   /* eslint-disable class-methods-use-this */
   $1
   /* eslint-enable class-methods-use-this */
  '''
  description: "enforce that class methods utilize `this`"
 "eslint-disable-next-line class-methods-use-this":
  prefix: "class-methods-use-this eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line class-methods-use-this
   $1
  '''
  description: "enforce that class methods utilize `this`"
 "eslint-rule/class-methods-use-this":
  prefix: "class-methods-use-this"
  body: "class-methods-use-this"
  description: "enforce that class methods utilize `this`"
 "eslint-disable comma-dangle":
  prefix: "comma-dangle eslint-disable"
  body: '''
   /* eslint-disable comma-dangle */
   $1
   /* eslint-enable comma-dangle */
  '''
  description: "require or disallow trailing commas"
 "eslint-disable-next-line comma-dangle":
  prefix: "comma-dangle eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line comma-dangle
   $1
  '''
  description: "require or disallow trailing commas"
 "eslint-rule/comma-dangle":
  prefix: "comma-dangle"
  body: "comma-dangle"
  description: "require or disallow trailing commas"
 "eslint-disable comma-spacing":
  prefix: "comma-spacing eslint-disable"
  body: '''
   /* eslint-disable comma-spacing */
   $1
   /* eslint-enable comma-spacing */
  '''
  description: "enforce consistent spacing before and after commas"
 "eslint-disable-next-line comma-spacing":
  prefix: "comma-spacing eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line comma-spacing
   $1
  '''
  description: "enforce consistent spacing before and after commas"
 "eslint-rule/comma-spacing":
  prefix: "comma-spacing"
  body: "comma-spacing"
  description: "enforce consistent spacing before and after commas"
 "eslint-disable comma-style":
  prefix: "comma-style eslint-disable"
  body: '''
   /* eslint-disable comma-style */
   $1
   /* eslint-enable comma-style */
  '''
  description: "enforce consistent comma style"
 "eslint-disable-next-line comma-style":
  prefix: "comma-style eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line comma-style
   $1
  '''
  description: "enforce consistent comma style"
 "eslint-rule/comma-style":
  prefix: "comma-style"
  body: "comma-style"
  description: "enforce consistent comma style"
 "eslint-disable complexity":
  prefix: "complexity eslint-disable"
  body: '''
   /* eslint-disable complexity */
   $1
   /* eslint-enable complexity */
  '''
  description: "enforce a maximum cyclomatic complexity allowed in a program"
 "eslint-disable-next-line complexity":
  prefix: "complexity eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line complexity
   $1
  '''
  description: "enforce a maximum cyclomatic complexity allowed in a program"
 "eslint-rule/complexity":
  prefix: "complexity"
  body: "complexity"
  description: "enforce a maximum cyclomatic complexity allowed in a program"
 "eslint-disable computed-property-spacing":
  prefix: "computed-property-spacing eslint-disable"
  body: '''
   /* eslint-disable computed-property-spacing */
   $1
   /* eslint-enable computed-property-spacing */
  '''
  description: "enforce consistent spacing inside computed property brackets"
 "eslint-disable-next-line computed-property-spacing":
  prefix: "computed-property-spacing eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line computed-property-spacing
   $1
  '''
  description: "enforce consistent spacing inside computed property brackets"
 "eslint-rule/computed-property-spacing":
  prefix: "computed-property-spacing"
  body: "computed-property-spacing"
  description: "enforce consistent spacing inside computed property brackets"
 "eslint-disable consistent-return":
  prefix: "consistent-return eslint-disable"
  body: '''
   /* eslint-disable consistent-return */
   $1
   /* eslint-enable consistent-return */
  '''
  description: "require `return` statements to either always or never specify values"
 "eslint-disable-next-line consistent-return":
  prefix: "consistent-return eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line consistent-return
   $1
  '''
  description: "require `return` statements to either always or never specify values"
 "eslint-rule/consistent-return":
  prefix: "consistent-return"
  body: "consistent-return"
  description: "require `return` statements to either always or never specify values"
 "eslint-disable consistent-this":
  prefix: "consistent-this eslint-disable"
  body: '''
   /* eslint-disable consistent-this */
   $1
   /* eslint-enable consistent-this */
  '''
  description: "enforce consistent naming when capturing the current execution context"
 "eslint-disable-next-line consistent-this":
  prefix: "consistent-this eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line consistent-this
   $1
  '''
  description: "enforce consistent naming when capturing the current execution context"
 "eslint-rule/consistent-this":
  prefix: "consistent-this"
  body: "consistent-this"
  description: "enforce consistent naming when capturing the current execution context"
 "eslint-disable constructor-super":
  prefix: "constructor-super eslint-disable"
  body: '''
   /* eslint-disable constructor-super */
   $1
   /* eslint-enable constructor-super */
  '''
  description: "require `super()` calls in constructors"
 "eslint-disable-next-line constructor-super":
  prefix: "constructor-super eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line constructor-super
   $1
  '''
  description: "require `super()` calls in constructors"
 "eslint-rule/constructor-super":
  prefix: "constructor-super"
  body: "constructor-super"
  description: "require `super()` calls in constructors"
 "eslint-disable curly":
  prefix: "curly eslint-disable"
  body: '''
   /* eslint-disable curly */
   $1
   /* eslint-enable curly */
  '''
  description: "enforce consistent brace style for all control statements"
 "eslint-disable-next-line curly":
  prefix: "curly eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line curly
   $1
  '''
  description: "enforce consistent brace style for all control statements"
 "eslint-rule/curly":
  prefix: "curly"
  body: "curly"
  description: "enforce consistent brace style for all control statements"
 "eslint-disable default-case":
  prefix: "default-case eslint-disable"
  body: '''
   /* eslint-disable default-case */
   $1
   /* eslint-enable default-case */
  '''
  description: "require `default` cases in `switch` statements"
 "eslint-disable-next-line default-case":
  prefix: "default-case eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line default-case
   $1
  '''
  description: "require `default` cases in `switch` statements"
 "eslint-rule/default-case":
  prefix: "default-case"
  body: "default-case"
  description: "require `default` cases in `switch` statements"
 "eslint-disable dot-location":
  prefix: "dot-location eslint-disable"
  body: '''
   /* eslint-disable dot-location */
   $1
   /* eslint-enable dot-location */
  '''
  description: "enforce consistent newlines before and after dots"
 "eslint-disable-next-line dot-location":
  prefix: "dot-location eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line dot-location
   $1
  '''
  description: "enforce consistent newlines before and after dots"
 "eslint-rule/dot-location":
  prefix: "dot-location"
  body: "dot-location"
  description: "enforce consistent newlines before and after dots"
 "eslint-disable dot-notation":
  prefix: "dot-notation eslint-disable"
  body: '''
   /* eslint-disable dot-notation */
   $1
   /* eslint-enable dot-notation */
  '''
  description: "enforce dot notation whenever possible"
 "eslint-disable-next-line dot-notation":
  prefix: "dot-notation eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line dot-notation
   $1
  '''
  description: "enforce dot notation whenever possible"
 "eslint-rule/dot-notation":
  prefix: "dot-notation"
  body: "dot-notation"
  description: "enforce dot notation whenever possible"
 "eslint-disable eol-last":
  prefix: "eol-last eslint-disable"
  body: '''
   /* eslint-disable eol-last */
   $1
   /* eslint-enable eol-last */
  '''
  description: "require or disallow newline at the end of files"
 "eslint-disable-next-line eol-last":
  prefix: "eol-last eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line eol-last
   $1
  '''
  description: "require or disallow newline at the end of files"
 "eslint-rule/eol-last":
  prefix: "eol-last"
  body: "eol-last"
  description: "require or disallow newline at the end of files"
 "eslint-disable eqeqeq":
  prefix: "eqeqeq eslint-disable"
  body: '''
   /* eslint-disable eqeqeq */
   $1
   /* eslint-enable eqeqeq */
  '''
  description: "require the use of `===` and `!==`"
 "eslint-disable-next-line eqeqeq":
  prefix: "eqeqeq eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line eqeqeq
   $1
  '''
  description: "require the use of `===` and `!==`"
 "eslint-rule/eqeqeq":
  prefix: "eqeqeq"
  body: "eqeqeq"
  description: "require the use of `===` and `!==`"
 "eslint-disable for-direction":
  prefix: "for-direction eslint-disable"
  body: '''
   /* eslint-disable for-direction */
   $1
   /* eslint-enable for-direction */
  '''
  description: "enforce \"for\" loop update clause moving the counter in the right direction."
 "eslint-disable-next-line for-direction":
  prefix: "for-direction eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line for-direction
   $1
  '''
  description: "enforce \"for\" loop update clause moving the counter in the right direction."
 "eslint-rule/for-direction":
  prefix: "for-direction"
  body: "for-direction"
  description: "enforce \"for\" loop update clause moving the counter in the right direction."
 "eslint-disable func-call-spacing":
  prefix: "func-call-spacing eslint-disable"
  body: '''
   /* eslint-disable func-call-spacing */
   $1
   /* eslint-enable func-call-spacing */
  '''
  description: "require or disallow spacing between function identifiers and their invocations"
 "eslint-disable-next-line func-call-spacing":
  prefix: "func-call-spacing eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line func-call-spacing
   $1
  '''
  description: "require or disallow spacing between function identifiers and their invocations"
 "eslint-rule/func-call-spacing":
  prefix: "func-call-spacing"
  body: "func-call-spacing"
  description: "require or disallow spacing between function identifiers and their invocations"
 "eslint-disable func-name-matching":
  prefix: "func-name-matching eslint-disable"
  body: '''
   /* eslint-disable func-name-matching */
   $1
   /* eslint-enable func-name-matching */
  '''
  description: "require function names to match the name of the variable or property to which they are assigned"
 "eslint-disable-next-line func-name-matching":
  prefix: "func-name-matching eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line func-name-matching
   $1
  '''
  description: "require function names to match the name of the variable or property to which they are assigned"
 "eslint-rule/func-name-matching":
  prefix: "func-name-matching"
  body: "func-name-matching"
  description: "require function names to match the name of the variable or property to which they are assigned"
 "eslint-disable func-names":
  prefix: "func-names eslint-disable"
  body: '''
   /* eslint-disable func-names */
   $1
   /* eslint-enable func-names */
  '''
  description: "require or disallow named `function` expressions"
 "eslint-disable-next-line func-names":
  prefix: "func-names eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line func-names
   $1
  '''
  description: "require or disallow named `function` expressions"
 "eslint-rule/func-names":
  prefix: "func-names"
  body: "func-names"
  description: "require or disallow named `function` expressions"
 "eslint-disable func-style":
  prefix: "func-style eslint-disable"
  body: '''
   /* eslint-disable func-style */
   $1
   /* eslint-enable func-style */
  '''
  description: "enforce the consistent use of either `function` declarations or expressions"
 "eslint-disable-next-line func-style":
  prefix: "func-style eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line func-style
   $1
  '''
  description: "enforce the consistent use of either `function` declarations or expressions"
 "eslint-rule/func-style":
  prefix: "func-style"
  body: "func-style"
  description: "enforce the consistent use of either `function` declarations or expressions"
 "eslint-disable generator-star-spacing":
  prefix: "generator-star-spacing eslint-disable"
  body: '''
   /* eslint-disable generator-star-spacing */
   $1
   /* eslint-enable generator-star-spacing */
  '''
  description: "enforce consistent spacing around `*` operators in generator functions"
 "eslint-disable-next-line generator-star-spacing":
  prefix: "generator-star-spacing eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line generator-star-spacing
   $1
  '''
  description: "enforce consistent spacing around `*` operators in generator functions"
 "eslint-rule/generator-star-spacing":
  prefix: "generator-star-spacing"
  body: "generator-star-spacing"
  description: "enforce consistent spacing around `*` operators in generator functions"
 "eslint-disable global-require":
  prefix: "global-require eslint-disable"
  body: '''
   /* eslint-disable global-require */
   $1
   /* eslint-enable global-require */
  '''
  description: "require `require()` calls to be placed at top-level module scope"
 "eslint-disable-next-line global-require":
  prefix: "global-require eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line global-require
   $1
  '''
  description: "require `require()` calls to be placed at top-level module scope"
 "eslint-rule/global-require":
  prefix: "global-require"
  body: "global-require"
  description: "require `require()` calls to be placed at top-level module scope"
 "eslint-disable guard-for-in":
  prefix: "guard-for-in eslint-disable"
  body: '''
   /* eslint-disable guard-for-in */
   $1
   /* eslint-enable guard-for-in */
  '''
  description: "require `for-in` loops to include an `if` statement"
 "eslint-disable-next-line guard-for-in":
  prefix: "guard-for-in eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line guard-for-in
   $1
  '''
  description: "require `for-in` loops to include an `if` statement"
 "eslint-rule/guard-for-in":
  prefix: "guard-for-in"
  body: "guard-for-in"
  description: "require `for-in` loops to include an `if` statement"
 "eslint-disable handle-callback-err":
  prefix: "handle-callback-err eslint-disable"
  body: '''
   /* eslint-disable handle-callback-err */
   $1
   /* eslint-enable handle-callback-err */
  '''
  description: "require error handling in callbacks"
 "eslint-disable-next-line handle-callback-err":
  prefix: "handle-callback-err eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line handle-callback-err
   $1
  '''
  description: "require error handling in callbacks"
 "eslint-rule/handle-callback-err":
  prefix: "handle-callback-err"
  body: "handle-callback-err"
  description: "require error handling in callbacks"
 "eslint-disable id-blacklist":
  prefix: "id-blacklist eslint-disable"
  body: '''
   /* eslint-disable id-blacklist */
   $1
   /* eslint-enable id-blacklist */
  '''
  description: "disallow specified identifiers"
 "eslint-disable-next-line id-blacklist":
  prefix: "id-blacklist eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line id-blacklist
   $1
  '''
  description: "disallow specified identifiers"
 "eslint-rule/id-blacklist":
  prefix: "id-blacklist"
  body: "id-blacklist"
  description: "disallow specified identifiers"
 "eslint-disable id-length":
  prefix: "id-length eslint-disable"
  body: '''
   /* eslint-disable id-length */
   $1
   /* eslint-enable id-length */
  '''
  description: "enforce minimum and maximum identifier lengths"
 "eslint-disable-next-line id-length":
  prefix: "id-length eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line id-length
   $1
  '''
  description: "enforce minimum and maximum identifier lengths"
 "eslint-rule/id-length":
  prefix: "id-length"
  body: "id-length"
  description: "enforce minimum and maximum identifier lengths"
 "eslint-disable id-match":
  prefix: "id-match eslint-disable"
  body: '''
   /* eslint-disable id-match */
   $1
   /* eslint-enable id-match */
  '''
  description: "require identifiers to match a specified regular expression"
 "eslint-disable-next-line id-match":
  prefix: "id-match eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line id-match
   $1
  '''
  description: "require identifiers to match a specified regular expression"
 "eslint-rule/id-match":
  prefix: "id-match"
  body: "id-match"
  description: "require identifiers to match a specified regular expression"
 "eslint-disable indent":
  prefix: "indent eslint-disable"
  body: '''
   /* eslint-disable indent */
   $1
   /* eslint-enable indent */
  '''
  description: "enforce consistent indentation"
 "eslint-disable-next-line indent":
  prefix: "indent eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line indent
   $1
  '''
  description: "enforce consistent indentation"
 "eslint-rule/indent":
  prefix: "indent"
  body: "indent"
  description: "enforce consistent indentation"
 "eslint-disable init-declarations":
  prefix: "init-declarations eslint-disable"
  body: '''
   /* eslint-disable init-declarations */
   $1
   /* eslint-enable init-declarations */
  '''
  description: "require or disallow initialization in variable declarations"
 "eslint-disable-next-line init-declarations":
  prefix: "init-declarations eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line init-declarations
   $1
  '''
  description: "require or disallow initialization in variable declarations"
 "eslint-rule/init-declarations":
  prefix: "init-declarations"
  body: "init-declarations"
  description: "require or disallow initialization in variable declarations"
 "eslint-disable jsx-quotes":
  prefix: "jsx-quotes eslint-disable"
  body: '''
   /* eslint-disable jsx-quotes */
   $1
   /* eslint-enable jsx-quotes */
  '''
  description: "enforce the consistent use of either double or single quotes in JSX attributes"
 "eslint-disable-next-line jsx-quotes":
  prefix: "jsx-quotes eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line jsx-quotes
   $1
  '''
  description: "enforce the consistent use of either double or single quotes in JSX attributes"
 "eslint-rule/jsx-quotes":
  prefix: "jsx-quotes"
  body: "jsx-quotes"
  description: "enforce the consistent use of either double or single quotes in JSX attributes"
 "eslint-disable key-spacing":
  prefix: "key-spacing eslint-disable"
  body: '''
   /* eslint-disable key-spacing */
   $1
   /* eslint-enable key-spacing */
  '''
  description: "enforce consistent spacing between keys and values in object literal properties"
 "eslint-disable-next-line key-spacing":
  prefix: "key-spacing eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line key-spacing
   $1
  '''
  description: "enforce consistent spacing between keys and values in object literal properties"
 "eslint-rule/key-spacing":
  prefix: "key-spacing"
  body: "key-spacing"
  description: "enforce consistent spacing between keys and values in object literal properties"
 "eslint-disable keyword-spacing":
  prefix: "keyword-spacing eslint-disable"
  body: '''
   /* eslint-disable keyword-spacing */
   $1
   /* eslint-enable keyword-spacing */
  '''
  description: "enforce consistent spacing before and after keywords"
 "eslint-disable-next-line keyword-spacing":
  prefix: "keyword-spacing eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line keyword-spacing
   $1
  '''
  description: "enforce consistent spacing before and after keywords"
 "eslint-rule/keyword-spacing":
  prefix: "keyword-spacing"
  body: "keyword-spacing"
  description: "enforce consistent spacing before and after keywords"
 "eslint-disable line-comment-position":
  prefix: "line-comment-position eslint-disable"
  body: '''
   /* eslint-disable line-comment-position */
   $1
   /* eslint-enable line-comment-position */
  '''
  description: "enforce position of line comments"
 "eslint-disable-next-line line-comment-position":
  prefix: "line-comment-position eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line line-comment-position
   $1
  '''
  description: "enforce position of line comments"
 "eslint-rule/line-comment-position":
  prefix: "line-comment-position"
  body: "line-comment-position"
  description: "enforce position of line comments"
 "eslint-disable linebreak-style":
  prefix: "linebreak-style eslint-disable"
  body: '''
   /* eslint-disable linebreak-style */
   $1
   /* eslint-enable linebreak-style */
  '''
  description: "enforce consistent linebreak style"
 "eslint-disable-next-line linebreak-style":
  prefix: "linebreak-style eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line linebreak-style
   $1
  '''
  description: "enforce consistent linebreak style"
 "eslint-rule/linebreak-style":
  prefix: "linebreak-style"
  body: "linebreak-style"
  description: "enforce consistent linebreak style"
 "eslint-disable lines-around-comment":
  prefix: "lines-around-comment eslint-disable"
  body: '''
   /* eslint-disable lines-around-comment */
   $1
   /* eslint-enable lines-around-comment */
  '''
  description: "require empty lines around comments"
 "eslint-disable-next-line lines-around-comment":
  prefix: "lines-around-comment eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line lines-around-comment
   $1
  '''
  description: "require empty lines around comments"
 "eslint-rule/lines-around-comment":
  prefix: "lines-around-comment"
  body: "lines-around-comment"
  description: "require empty lines around comments"
 "eslint-disable max-depth":
  prefix: "max-depth eslint-disable"
  body: '''
   /* eslint-disable max-depth */
   $1
   /* eslint-enable max-depth */
  '''
  description: "enforce a maximum depth that blocks can be nested"
 "eslint-disable-next-line max-depth":
  prefix: "max-depth eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line max-depth
   $1
  '''
  description: "enforce a maximum depth that blocks can be nested"
 "eslint-rule/max-depth":
  prefix: "max-depth"
  body: "max-depth"
  description: "enforce a maximum depth that blocks can be nested"
 "eslint-disable max-len":
  prefix: "max-len eslint-disable"
  body: '''
   /* eslint-disable max-len */
   $1
   /* eslint-enable max-len */
  '''
  description: "enforce a maximum line length"
 "eslint-disable-next-line max-len":
  prefix: "max-len eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line max-len
   $1
  '''
  description: "enforce a maximum line length"
 "eslint-rule/max-len":
  prefix: "max-len"
  body: "max-len"
  description: "enforce a maximum line length"
 "eslint-disable max-lines":
  prefix: "max-lines eslint-disable"
  body: '''
   /* eslint-disable max-lines */
   $1
   /* eslint-enable max-lines */
  '''
  description: "enforce a maximum number of lines per file"
 "eslint-disable-next-line max-lines":
  prefix: "max-lines eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line max-lines
   $1
  '''
  description: "enforce a maximum number of lines per file"
 "eslint-rule/max-lines":
  prefix: "max-lines"
  body: "max-lines"
  description: "enforce a maximum number of lines per file"
 "eslint-disable max-nested-callbacks":
  prefix: "max-nested-callbacks eslint-disable"
  body: '''
   /* eslint-disable max-nested-callbacks */
   $1
   /* eslint-enable max-nested-callbacks */
  '''
  description: "enforce a maximum depth that callbacks can be nested"
 "eslint-disable-next-line max-nested-callbacks":
  prefix: "max-nested-callbacks eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line max-nested-callbacks
   $1
  '''
  description: "enforce a maximum depth that callbacks can be nested"
 "eslint-rule/max-nested-callbacks":
  prefix: "max-nested-callbacks"
  body: "max-nested-callbacks"
  description: "enforce a maximum depth that callbacks can be nested"
 "eslint-disable max-params":
  prefix: "max-params eslint-disable"
  body: '''
   /* eslint-disable max-params */
   $1
   /* eslint-enable max-params */
  '''
  description: "enforce a maximum number of parameters in function definitions"
 "eslint-disable-next-line max-params":
  prefix: "max-params eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line max-params
   $1
  '''
  description: "enforce a maximum number of parameters in function definitions"
 "eslint-rule/max-params":
  prefix: "max-params"
  body: "max-params"
  description: "enforce a maximum number of parameters in function definitions"
 "eslint-disable max-statements-per-line":
  prefix: "max-statements-per-line eslint-disable"
  body: '''
   /* eslint-disable max-statements-per-line */
   $1
   /* eslint-enable max-statements-per-line */
  '''
  description: "enforce a maximum number of statements allowed per line"
 "eslint-disable-next-line max-statements-per-line":
  prefix: "max-statements-per-line eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line max-statements-per-line
   $1
  '''
  description: "enforce a maximum number of statements allowed per line"
 "eslint-rule/max-statements-per-line":
  prefix: "max-statements-per-line"
  body: "max-statements-per-line"
  description: "enforce a maximum number of statements allowed per line"
 "eslint-disable max-statements":
  prefix: "max-statements eslint-disable"
  body: '''
   /* eslint-disable max-statements */
   $1
   /* eslint-enable max-statements */
  '''
  description: "enforce a maximum number of statements allowed in function blocks"
 "eslint-disable-next-line max-statements":
  prefix: "max-statements eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line max-statements
   $1
  '''
  description: "enforce a maximum number of statements allowed in function blocks"
 "eslint-rule/max-statements":
  prefix: "max-statements"
  body: "max-statements"
  description: "enforce a maximum number of statements allowed in function blocks"
 "eslint-disable multiline-ternary":
  prefix: "multiline-ternary eslint-disable"
  body: '''
   /* eslint-disable multiline-ternary */
   $1
   /* eslint-enable multiline-ternary */
  '''
  description: "enforce newlines between operands of ternary expressions"
 "eslint-disable-next-line multiline-ternary":
  prefix: "multiline-ternary eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line multiline-ternary
   $1
  '''
  description: "enforce newlines between operands of ternary expressions"
 "eslint-rule/multiline-ternary":
  prefix: "multiline-ternary"
  body: "multiline-ternary"
  description: "enforce newlines between operands of ternary expressions"
 "eslint-disable new-cap":
  prefix: "new-cap eslint-disable"
  body: '''
   /* eslint-disable new-cap */
   $1
   /* eslint-enable new-cap */
  '''
  description: "require constructor names to begin with a capital letter"
 "eslint-disable-next-line new-cap":
  prefix: "new-cap eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line new-cap
   $1
  '''
  description: "require constructor names to begin with a capital letter"
 "eslint-rule/new-cap":
  prefix: "new-cap"
  body: "new-cap"
  description: "require constructor names to begin with a capital letter"
 "eslint-disable new-parens":
  prefix: "new-parens eslint-disable"
  body: '''
   /* eslint-disable new-parens */
   $1
   /* eslint-enable new-parens */
  '''
  description: "require parentheses when invoking a constructor with no arguments"
 "eslint-disable-next-line new-parens":
  prefix: "new-parens eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line new-parens
   $1
  '''
  description: "require parentheses when invoking a constructor with no arguments"
 "eslint-rule/new-parens":
  prefix: "new-parens"
  body: "new-parens"
  description: "require parentheses when invoking a constructor with no arguments"
 "eslint-disable newline-per-chained-call":
  prefix: "newline-per-chained-call eslint-disable"
  body: '''
   /* eslint-disable newline-per-chained-call */
   $1
   /* eslint-enable newline-per-chained-call */
  '''
  description: "require a newline after each call in a method chain"
 "eslint-disable-next-line newline-per-chained-call":
  prefix: "newline-per-chained-call eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line newline-per-chained-call
   $1
  '''
  description: "require a newline after each call in a method chain"
 "eslint-rule/newline-per-chained-call":
  prefix: "newline-per-chained-call"
  body: "newline-per-chained-call"
  description: "require a newline after each call in a method chain"
 "eslint-disable no-alert":
  prefix: "no-alert eslint-disable"
  body: '''
   /* eslint-disable no-alert */
   $1
   /* eslint-enable no-alert */
  '''
  description: "disallow the use of `alert`, `confirm`, and `prompt`"
 "eslint-disable-next-line no-alert":
  prefix: "no-alert eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-alert
   $1
  '''
  description: "disallow the use of `alert`, `confirm`, and `prompt`"
 "eslint-rule/no-alert":
  prefix: "no-alert"
  body: "no-alert"
  description: "disallow the use of `alert`, `confirm`, and `prompt`"
 "eslint-disable no-array-constructor":
  prefix: "no-array-constructor eslint-disable"
  body: '''
   /* eslint-disable no-array-constructor */
   $1
   /* eslint-enable no-array-constructor */
  '''
  description: "disallow `Array` constructors"
 "eslint-disable-next-line no-array-constructor":
  prefix: "no-array-constructor eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-array-constructor
   $1
  '''
  description: "disallow `Array` constructors"
 "eslint-rule/no-array-constructor":
  prefix: "no-array-constructor"
  body: "no-array-constructor"
  description: "disallow `Array` constructors"
 "eslint-disable no-await-in-loop":
  prefix: "no-await-in-loop eslint-disable"
  body: '''
   /* eslint-disable no-await-in-loop */
   $1
   /* eslint-enable no-await-in-loop */
  '''
  description: "disallow `await` inside of loops"
 "eslint-disable-next-line no-await-in-loop":
  prefix: "no-await-in-loop eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-await-in-loop
   $1
  '''
  description: "disallow `await` inside of loops"
 "eslint-rule/no-await-in-loop":
  prefix: "no-await-in-loop"
  body: "no-await-in-loop"
  description: "disallow `await` inside of loops"
 "eslint-disable no-bitwise":
  prefix: "no-bitwise eslint-disable"
  body: '''
   /* eslint-disable no-bitwise */
   $1
   /* eslint-enable no-bitwise */
  '''
  description: "disallow bitwise operators"
 "eslint-disable-next-line no-bitwise":
  prefix: "no-bitwise eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-bitwise
   $1
  '''
  description: "disallow bitwise operators"
 "eslint-rule/no-bitwise":
  prefix: "no-bitwise"
  body: "no-bitwise"
  description: "disallow bitwise operators"
 "eslint-disable no-buffer-constructor":
  prefix: "no-buffer-constructor eslint-disable"
  body: '''
   /* eslint-disable no-buffer-constructor */
   $1
   /* eslint-enable no-buffer-constructor */
  '''
  description: "disallow use of the Buffer() constructor"
 "eslint-disable-next-line no-buffer-constructor":
  prefix: "no-buffer-constructor eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-buffer-constructor
   $1
  '''
  description: "disallow use of the Buffer() constructor"
 "eslint-rule/no-buffer-constructor":
  prefix: "no-buffer-constructor"
  body: "no-buffer-constructor"
  description: "disallow use of the Buffer() constructor"
 "eslint-disable no-caller":
  prefix: "no-caller eslint-disable"
  body: '''
   /* eslint-disable no-caller */
   $1
   /* eslint-enable no-caller */
  '''
  description: "disallow the use of `arguments.caller` or `arguments.callee`"
 "eslint-disable-next-line no-caller":
  prefix: "no-caller eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-caller
   $1
  '''
  description: "disallow the use of `arguments.caller` or `arguments.callee`"
 "eslint-rule/no-caller":
  prefix: "no-caller"
  body: "no-caller"
  description: "disallow the use of `arguments.caller` or `arguments.callee`"
 "eslint-disable no-case-declarations":
  prefix: "no-case-declarations eslint-disable"
  body: '''
   /* eslint-disable no-case-declarations */
   $1
   /* eslint-enable no-case-declarations */
  '''
  description: "disallow lexical declarations in case clauses"
 "eslint-disable-next-line no-case-declarations":
  prefix: "no-case-declarations eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-case-declarations
   $1
  '''
  description: "disallow lexical declarations in case clauses"
 "eslint-rule/no-case-declarations":
  prefix: "no-case-declarations"
  body: "no-case-declarations"
  description: "disallow lexical declarations in case clauses"
 "eslint-disable no-catch-shadow":
  prefix: "no-catch-shadow eslint-disable"
  body: '''
   /* eslint-disable no-catch-shadow */
   $1
   /* eslint-enable no-catch-shadow */
  '''
  description: "disallow `catch` clause parameters from shadowing variables in the outer scope"
 "eslint-disable-next-line no-catch-shadow":
  prefix: "no-catch-shadow eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-catch-shadow
   $1
  '''
  description: "disallow `catch` clause parameters from shadowing variables in the outer scope"
 "eslint-rule/no-catch-shadow":
  prefix: "no-catch-shadow"
  body: "no-catch-shadow"
  description: "disallow `catch` clause parameters from shadowing variables in the outer scope"
 "eslint-disable no-class-assign":
  prefix: "no-class-assign eslint-disable"
  body: '''
   /* eslint-disable no-class-assign */
   $1
   /* eslint-enable no-class-assign */
  '''
  description: "disallow reassigning class members"
 "eslint-disable-next-line no-class-assign":
  prefix: "no-class-assign eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-class-assign
   $1
  '''
  description: "disallow reassigning class members"
 "eslint-rule/no-class-assign":
  prefix: "no-class-assign"
  body: "no-class-assign"
  description: "disallow reassigning class members"
 "eslint-disable no-compare-neg-zero":
  prefix: "no-compare-neg-zero eslint-disable"
  body: '''
   /* eslint-disable no-compare-neg-zero */
   $1
   /* eslint-enable no-compare-neg-zero */
  '''
  description: "disallow comparing against -0"
 "eslint-disable-next-line no-compare-neg-zero":
  prefix: "no-compare-neg-zero eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-compare-neg-zero
   $1
  '''
  description: "disallow comparing against -0"
 "eslint-rule/no-compare-neg-zero":
  prefix: "no-compare-neg-zero"
  body: "no-compare-neg-zero"
  description: "disallow comparing against -0"
 "eslint-disable no-cond-assign":
  prefix: "no-cond-assign eslint-disable"
  body: '''
   /* eslint-disable no-cond-assign */
   $1
   /* eslint-enable no-cond-assign */
  '''
  description: "disallow assignment operators in conditional expressions"
 "eslint-disable-next-line no-cond-assign":
  prefix: "no-cond-assign eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-cond-assign
   $1
  '''
  description: "disallow assignment operators in conditional expressions"
 "eslint-rule/no-cond-assign":
  prefix: "no-cond-assign"
  body: "no-cond-assign"
  description: "disallow assignment operators in conditional expressions"
 "eslint-disable no-confusing-arrow":
  prefix: "no-confusing-arrow eslint-disable"
  body: '''
   /* eslint-disable no-confusing-arrow */
   $1
   /* eslint-enable no-confusing-arrow */
  '''
  description: "disallow arrow functions where they could be confused with comparisons"
 "eslint-disable-next-line no-confusing-arrow":
  prefix: "no-confusing-arrow eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-confusing-arrow
   $1
  '''
  description: "disallow arrow functions where they could be confused with comparisons"
 "eslint-rule/no-confusing-arrow":
  prefix: "no-confusing-arrow"
  body: "no-confusing-arrow"
  description: "disallow arrow functions where they could be confused with comparisons"
 "eslint-disable no-console":
  prefix: "no-console eslint-disable"
  body: '''
   /* eslint-disable no-console */
   $1
   /* eslint-enable no-console */
  '''
  description: "disallow the use of `console`"
 "eslint-disable-next-line no-console":
  prefix: "no-console eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-console
   $1
  '''
  description: "disallow the use of `console`"
 "eslint-rule/no-console":
  prefix: "no-console"
  body: "no-console"
  description: "disallow the use of `console`"
 "eslint-disable no-const-assign":
  prefix: "no-const-assign eslint-disable"
  body: '''
   /* eslint-disable no-const-assign */
   $1
   /* eslint-enable no-const-assign */
  '''
  description: "disallow reassigning `const` variables"
 "eslint-disable-next-line no-const-assign":
  prefix: "no-const-assign eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-const-assign
   $1
  '''
  description: "disallow reassigning `const` variables"
 "eslint-rule/no-const-assign":
  prefix: "no-const-assign"
  body: "no-const-assign"
  description: "disallow reassigning `const` variables"
 "eslint-disable no-constant-condition":
  prefix: "no-constant-condition eslint-disable"
  body: '''
   /* eslint-disable no-constant-condition */
   $1
   /* eslint-enable no-constant-condition */
  '''
  description: "disallow constant expressions in conditions"
 "eslint-disable-next-line no-constant-condition":
  prefix: "no-constant-condition eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-constant-condition
   $1
  '''
  description: "disallow constant expressions in conditions"
 "eslint-rule/no-constant-condition":
  prefix: "no-constant-condition"
  body: "no-constant-condition"
  description: "disallow constant expressions in conditions"
 "eslint-disable no-continue":
  prefix: "no-continue eslint-disable"
  body: '''
   /* eslint-disable no-continue */
   $1
   /* eslint-enable no-continue */
  '''
  description: "disallow `continue` statements"
 "eslint-disable-next-line no-continue":
  prefix: "no-continue eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-continue
   $1
  '''
  description: "disallow `continue` statements"
 "eslint-rule/no-continue":
  prefix: "no-continue"
  body: "no-continue"
  description: "disallow `continue` statements"
 "eslint-disable no-control-regex":
  prefix: "no-control-regex eslint-disable"
  body: '''
   /* eslint-disable no-control-regex */
   $1
   /* eslint-enable no-control-regex */
  '''
  description: "disallow control characters in regular expressions"
 "eslint-disable-next-line no-control-regex":
  prefix: "no-control-regex eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-control-regex
   $1
  '''
  description: "disallow control characters in regular expressions"
 "eslint-rule/no-control-regex":
  prefix: "no-control-regex"
  body: "no-control-regex"
  description: "disallow control characters in regular expressions"
 "eslint-disable no-debugger":
  prefix: "no-debugger eslint-disable"
  body: '''
   /* eslint-disable no-debugger */
   $1
   /* eslint-enable no-debugger */
  '''
  description: "disallow the use of `debugger`"
 "eslint-disable-next-line no-debugger":
  prefix: "no-debugger eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-debugger
   $1
  '''
  description: "disallow the use of `debugger`"
 "eslint-rule/no-debugger":
  prefix: "no-debugger"
  body: "no-debugger"
  description: "disallow the use of `debugger`"
 "eslint-disable no-delete-var":
  prefix: "no-delete-var eslint-disable"
  body: '''
   /* eslint-disable no-delete-var */
   $1
   /* eslint-enable no-delete-var */
  '''
  description: "disallow deleting variables"
 "eslint-disable-next-line no-delete-var":
  prefix: "no-delete-var eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-delete-var
   $1
  '''
  description: "disallow deleting variables"
 "eslint-rule/no-delete-var":
  prefix: "no-delete-var"
  body: "no-delete-var"
  description: "disallow deleting variables"
 "eslint-disable no-div-regex":
  prefix: "no-div-regex eslint-disable"
  body: '''
   /* eslint-disable no-div-regex */
   $1
   /* eslint-enable no-div-regex */
  '''
  description: "disallow division operators explicitly at the beginning of regular expressions"
 "eslint-disable-next-line no-div-regex":
  prefix: "no-div-regex eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-div-regex
   $1
  '''
  description: "disallow division operators explicitly at the beginning of regular expressions"
 "eslint-rule/no-div-regex":
  prefix: "no-div-regex"
  body: "no-div-regex"
  description: "disallow division operators explicitly at the beginning of regular expressions"
 "eslint-disable no-dupe-args":
  prefix: "no-dupe-args eslint-disable"
  body: '''
   /* eslint-disable no-dupe-args */
   $1
   /* eslint-enable no-dupe-args */
  '''
  description: "disallow duplicate arguments in `function` definitions"
 "eslint-disable-next-line no-dupe-args":
  prefix: "no-dupe-args eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-dupe-args
   $1
  '''
  description: "disallow duplicate arguments in `function` definitions"
 "eslint-rule/no-dupe-args":
  prefix: "no-dupe-args"
  body: "no-dupe-args"
  description: "disallow duplicate arguments in `function` definitions"
 "eslint-disable no-dupe-class-members":
  prefix: "no-dupe-class-members eslint-disable"
  body: '''
   /* eslint-disable no-dupe-class-members */
   $1
   /* eslint-enable no-dupe-class-members */
  '''
  description: "disallow duplicate class members"
 "eslint-disable-next-line no-dupe-class-members":
  prefix: "no-dupe-class-members eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-dupe-class-members
   $1
  '''
  description: "disallow duplicate class members"
 "eslint-rule/no-dupe-class-members":
  prefix: "no-dupe-class-members"
  body: "no-dupe-class-members"
  description: "disallow duplicate class members"
 "eslint-disable no-dupe-keys":
  prefix: "no-dupe-keys eslint-disable"
  body: '''
   /* eslint-disable no-dupe-keys */
   $1
   /* eslint-enable no-dupe-keys */
  '''
  description: "disallow duplicate keys in object literals"
 "eslint-disable-next-line no-dupe-keys":
  prefix: "no-dupe-keys eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-dupe-keys
   $1
  '''
  description: "disallow duplicate keys in object literals"
 "eslint-rule/no-dupe-keys":
  prefix: "no-dupe-keys"
  body: "no-dupe-keys"
  description: "disallow duplicate keys in object literals"
 "eslint-disable no-duplicate-case":
  prefix: "no-duplicate-case eslint-disable"
  body: '''
   /* eslint-disable no-duplicate-case */
   $1
   /* eslint-enable no-duplicate-case */
  '''
  description: "disallow duplicate case labels"
 "eslint-disable-next-line no-duplicate-case":
  prefix: "no-duplicate-case eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-duplicate-case
   $1
  '''
  description: "disallow duplicate case labels"
 "eslint-rule/no-duplicate-case":
  prefix: "no-duplicate-case"
  body: "no-duplicate-case"
  description: "disallow duplicate case labels"
 "eslint-disable no-duplicate-imports":
  prefix: "no-duplicate-imports eslint-disable"
  body: '''
   /* eslint-disable no-duplicate-imports */
   $1
   /* eslint-enable no-duplicate-imports */
  '''
  description: "disallow duplicate module imports"
 "eslint-disable-next-line no-duplicate-imports":
  prefix: "no-duplicate-imports eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-duplicate-imports
   $1
  '''
  description: "disallow duplicate module imports"
 "eslint-rule/no-duplicate-imports":
  prefix: "no-duplicate-imports"
  body: "no-duplicate-imports"
  description: "disallow duplicate module imports"
 "eslint-disable no-else-return":
  prefix: "no-else-return eslint-disable"
  body: '''
   /* eslint-disable no-else-return */
   $1
   /* eslint-enable no-else-return */
  '''
  description: "disallow `else` blocks after `return` statements in `if` statements"
 "eslint-disable-next-line no-else-return":
  prefix: "no-else-return eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-else-return
   $1
  '''
  description: "disallow `else` blocks after `return` statements in `if` statements"
 "eslint-rule/no-else-return":
  prefix: "no-else-return"
  body: "no-else-return"
  description: "disallow `else` blocks after `return` statements in `if` statements"
 "eslint-disable no-empty-character-class":
  prefix: "no-empty-character-class eslint-disable"
  body: '''
   /* eslint-disable no-empty-character-class */
   $1
   /* eslint-enable no-empty-character-class */
  '''
  description: "disallow empty character classes in regular expressions"
 "eslint-disable-next-line no-empty-character-class":
  prefix: "no-empty-character-class eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-empty-character-class
   $1
  '''
  description: "disallow empty character classes in regular expressions"
 "eslint-rule/no-empty-character-class":
  prefix: "no-empty-character-class"
  body: "no-empty-character-class"
  description: "disallow empty character classes in regular expressions"
 "eslint-disable no-empty-function":
  prefix: "no-empty-function eslint-disable"
  body: '''
   /* eslint-disable no-empty-function */
   $1
   /* eslint-enable no-empty-function */
  '''
  description: "disallow empty functions"
 "eslint-disable-next-line no-empty-function":
  prefix: "no-empty-function eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-empty-function
   $1
  '''
  description: "disallow empty functions"
 "eslint-rule/no-empty-function":
  prefix: "no-empty-function"
  body: "no-empty-function"
  description: "disallow empty functions"
 "eslint-disable no-empty-pattern":
  prefix: "no-empty-pattern eslint-disable"
  body: '''
   /* eslint-disable no-empty-pattern */
   $1
   /* eslint-enable no-empty-pattern */
  '''
  description: "disallow empty destructuring patterns"
 "eslint-disable-next-line no-empty-pattern":
  prefix: "no-empty-pattern eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-empty-pattern
   $1
  '''
  description: "disallow empty destructuring patterns"
 "eslint-rule/no-empty-pattern":
  prefix: "no-empty-pattern"
  body: "no-empty-pattern"
  description: "disallow empty destructuring patterns"
 "eslint-disable no-empty":
  prefix: "no-empty eslint-disable"
  body: '''
   /* eslint-disable no-empty */
   $1
   /* eslint-enable no-empty */
  '''
  description: "disallow empty block statements"
 "eslint-disable-next-line no-empty":
  prefix: "no-empty eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-empty
   $1
  '''
  description: "disallow empty block statements"
 "eslint-rule/no-empty":
  prefix: "no-empty"
  body: "no-empty"
  description: "disallow empty block statements"
 "eslint-disable no-eq-null":
  prefix: "no-eq-null eslint-disable"
  body: '''
   /* eslint-disable no-eq-null */
   $1
   /* eslint-enable no-eq-null */
  '''
  description: "disallow `null` comparisons without type-checking operators"
 "eslint-disable-next-line no-eq-null":
  prefix: "no-eq-null eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-eq-null
   $1
  '''
  description: "disallow `null` comparisons without type-checking operators"
 "eslint-rule/no-eq-null":
  prefix: "no-eq-null"
  body: "no-eq-null"
  description: "disallow `null` comparisons without type-checking operators"
 "eslint-disable no-eval":
  prefix: "no-eval eslint-disable"
  body: '''
   /* eslint-disable no-eval */
   $1
   /* eslint-enable no-eval */
  '''
  description: "disallow the use of `eval()`"
 "eslint-disable-next-line no-eval":
  prefix: "no-eval eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-eval
   $1
  '''
  description: "disallow the use of `eval()`"
 "eslint-rule/no-eval":
  prefix: "no-eval"
  body: "no-eval"
  description: "disallow the use of `eval()`"
 "eslint-disable no-ex-assign":
  prefix: "no-ex-assign eslint-disable"
  body: '''
   /* eslint-disable no-ex-assign */
   $1
   /* eslint-enable no-ex-assign */
  '''
  description: "disallow reassigning exceptions in `catch` clauses"
 "eslint-disable-next-line no-ex-assign":
  prefix: "no-ex-assign eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-ex-assign
   $1
  '''
  description: "disallow reassigning exceptions in `catch` clauses"
 "eslint-rule/no-ex-assign":
  prefix: "no-ex-assign"
  body: "no-ex-assign"
  description: "disallow reassigning exceptions in `catch` clauses"
 "eslint-disable no-extend-native":
  prefix: "no-extend-native eslint-disable"
  body: '''
   /* eslint-disable no-extend-native */
   $1
   /* eslint-enable no-extend-native */
  '''
  description: "disallow extending native types"
 "eslint-disable-next-line no-extend-native":
  prefix: "no-extend-native eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-extend-native
   $1
  '''
  description: "disallow extending native types"
 "eslint-rule/no-extend-native":
  prefix: "no-extend-native"
  body: "no-extend-native"
  description: "disallow extending native types"
 "eslint-disable no-extra-bind":
  prefix: "no-extra-bind eslint-disable"
  body: '''
   /* eslint-disable no-extra-bind */
   $1
   /* eslint-enable no-extra-bind */
  '''
  description: "disallow unnecessary calls to `.bind()`"
 "eslint-disable-next-line no-extra-bind":
  prefix: "no-extra-bind eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-extra-bind
   $1
  '''
  description: "disallow unnecessary calls to `.bind()`"
 "eslint-rule/no-extra-bind":
  prefix: "no-extra-bind"
  body: "no-extra-bind"
  description: "disallow unnecessary calls to `.bind()`"
 "eslint-disable no-extra-boolean-cast":
  prefix: "no-extra-boolean-cast eslint-disable"
  body: '''
   /* eslint-disable no-extra-boolean-cast */
   $1
   /* eslint-enable no-extra-boolean-cast */
  '''
  description: "disallow unnecessary boolean casts"
 "eslint-disable-next-line no-extra-boolean-cast":
  prefix: "no-extra-boolean-cast eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-extra-boolean-cast
   $1
  '''
  description: "disallow unnecessary boolean casts"
 "eslint-rule/no-extra-boolean-cast":
  prefix: "no-extra-boolean-cast"
  body: "no-extra-boolean-cast"
  description: "disallow unnecessary boolean casts"
 "eslint-disable no-extra-label":
  prefix: "no-extra-label eslint-disable"
  body: '''
   /* eslint-disable no-extra-label */
   $1
   /* eslint-enable no-extra-label */
  '''
  description: "disallow unnecessary labels"
 "eslint-disable-next-line no-extra-label":
  prefix: "no-extra-label eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-extra-label
   $1
  '''
  description: "disallow unnecessary labels"
 "eslint-rule/no-extra-label":
  prefix: "no-extra-label"
  body: "no-extra-label"
  description: "disallow unnecessary labels"
 "eslint-disable no-extra-parens":
  prefix: "no-extra-parens eslint-disable"
  body: '''
   /* eslint-disable no-extra-parens */
   $1
   /* eslint-enable no-extra-parens */
  '''
  description: "disallow unnecessary parentheses"
 "eslint-disable-next-line no-extra-parens":
  prefix: "no-extra-parens eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-extra-parens
   $1
  '''
  description: "disallow unnecessary parentheses"
 "eslint-rule/no-extra-parens":
  prefix: "no-extra-parens"
  body: "no-extra-parens"
  description: "disallow unnecessary parentheses"
 "eslint-disable no-extra-semi":
  prefix: "no-extra-semi eslint-disable"
  body: '''
   /* eslint-disable no-extra-semi */
   $1
   /* eslint-enable no-extra-semi */
  '''
  description: "disallow unnecessary semicolons"
 "eslint-disable-next-line no-extra-semi":
  prefix: "no-extra-semi eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-extra-semi
   $1
  '''
  description: "disallow unnecessary semicolons"
 "eslint-rule/no-extra-semi":
  prefix: "no-extra-semi"
  body: "no-extra-semi"
  description: "disallow unnecessary semicolons"
 "eslint-disable no-fallthrough":
  prefix: "no-fallthrough eslint-disable"
  body: '''
   /* eslint-disable no-fallthrough */
   $1
   /* eslint-enable no-fallthrough */
  '''
  description: "disallow fallthrough of `case` statements"
 "eslint-disable-next-line no-fallthrough":
  prefix: "no-fallthrough eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-fallthrough
   $1
  '''
  description: "disallow fallthrough of `case` statements"
 "eslint-rule/no-fallthrough":
  prefix: "no-fallthrough"
  body: "no-fallthrough"
  description: "disallow fallthrough of `case` statements"
 "eslint-disable no-floating-decimal":
  prefix: "no-floating-decimal eslint-disable"
  body: '''
   /* eslint-disable no-floating-decimal */
   $1
   /* eslint-enable no-floating-decimal */
  '''
  description: "disallow leading or trailing decimal points in numeric literals"
 "eslint-disable-next-line no-floating-decimal":
  prefix: "no-floating-decimal eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-floating-decimal
   $1
  '''
  description: "disallow leading or trailing decimal points in numeric literals"
 "eslint-rule/no-floating-decimal":
  prefix: "no-floating-decimal"
  body: "no-floating-decimal"
  description: "disallow leading or trailing decimal points in numeric literals"
 "eslint-disable no-func-assign":
  prefix: "no-func-assign eslint-disable"
  body: '''
   /* eslint-disable no-func-assign */
   $1
   /* eslint-enable no-func-assign */
  '''
  description: "disallow reassigning `function` declarations"
 "eslint-disable-next-line no-func-assign":
  prefix: "no-func-assign eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-func-assign
   $1
  '''
  description: "disallow reassigning `function` declarations"
 "eslint-rule/no-func-assign":
  prefix: "no-func-assign"
  body: "no-func-assign"
  description: "disallow reassigning `function` declarations"
 "eslint-disable no-global-assign":
  prefix: "no-global-assign eslint-disable"
  body: '''
   /* eslint-disable no-global-assign */
   $1
   /* eslint-enable no-global-assign */
  '''
  description: "disallow assignments to native objects or read-only global variables"
 "eslint-disable-next-line no-global-assign":
  prefix: "no-global-assign eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-global-assign
   $1
  '''
  description: "disallow assignments to native objects or read-only global variables"
 "eslint-rule/no-global-assign":
  prefix: "no-global-assign"
  body: "no-global-assign"
  description: "disallow assignments to native objects or read-only global variables"
 "eslint-disable no-implicit-coercion":
  prefix: "no-implicit-coercion eslint-disable"
  body: '''
   /* eslint-disable no-implicit-coercion */
   $1
   /* eslint-enable no-implicit-coercion */
  '''
  description: "disallow shorthand type conversions"
 "eslint-disable-next-line no-implicit-coercion":
  prefix: "no-implicit-coercion eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-implicit-coercion
   $1
  '''
  description: "disallow shorthand type conversions"
 "eslint-rule/no-implicit-coercion":
  prefix: "no-implicit-coercion"
  body: "no-implicit-coercion"
  description: "disallow shorthand type conversions"
 "eslint-disable no-implicit-globals":
  prefix: "no-implicit-globals eslint-disable"
  body: '''
   /* eslint-disable no-implicit-globals */
   $1
   /* eslint-enable no-implicit-globals */
  '''
  description: "disallow variable and `function` declarations in the global scope"
 "eslint-disable-next-line no-implicit-globals":
  prefix: "no-implicit-globals eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-implicit-globals
   $1
  '''
  description: "disallow variable and `function` declarations in the global scope"
 "eslint-rule/no-implicit-globals":
  prefix: "no-implicit-globals"
  body: "no-implicit-globals"
  description: "disallow variable and `function` declarations in the global scope"
 "eslint-disable no-implied-eval":
  prefix: "no-implied-eval eslint-disable"
  body: '''
   /* eslint-disable no-implied-eval */
   $1
   /* eslint-enable no-implied-eval */
  '''
  description: "disallow the use of `eval()`-like methods"
 "eslint-disable-next-line no-implied-eval":
  prefix: "no-implied-eval eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-implied-eval
   $1
  '''
  description: "disallow the use of `eval()`-like methods"
 "eslint-rule/no-implied-eval":
  prefix: "no-implied-eval"
  body: "no-implied-eval"
  description: "disallow the use of `eval()`-like methods"
 "eslint-disable no-inline-comments":
  prefix: "no-inline-comments eslint-disable"
  body: '''
   /* eslint-disable no-inline-comments */
   $1
   /* eslint-enable no-inline-comments */
  '''
  description: "disallow inline comments after code"
 "eslint-disable-next-line no-inline-comments":
  prefix: "no-inline-comments eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-inline-comments
   $1
  '''
  description: "disallow inline comments after code"
 "eslint-rule/no-inline-comments":
  prefix: "no-inline-comments"
  body: "no-inline-comments"
  description: "disallow inline comments after code"
 "eslint-disable no-inner-declarations":
  prefix: "no-inner-declarations eslint-disable"
  body: '''
   /* eslint-disable no-inner-declarations */
   $1
   /* eslint-enable no-inner-declarations */
  '''
  description: "disallow variable or `function` declarations in nested blocks"
 "eslint-disable-next-line no-inner-declarations":
  prefix: "no-inner-declarations eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-inner-declarations
   $1
  '''
  description: "disallow variable or `function` declarations in nested blocks"
 "eslint-rule/no-inner-declarations":
  prefix: "no-inner-declarations"
  body: "no-inner-declarations"
  description: "disallow variable or `function` declarations in nested blocks"
 "eslint-disable no-invalid-regexp":
  prefix: "no-invalid-regexp eslint-disable"
  body: '''
   /* eslint-disable no-invalid-regexp */
   $1
   /* eslint-enable no-invalid-regexp */
  '''
  description: "disallow invalid regular expression strings in `RegExp` constructors"
 "eslint-disable-next-line no-invalid-regexp":
  prefix: "no-invalid-regexp eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-invalid-regexp
   $1
  '''
  description: "disallow invalid regular expression strings in `RegExp` constructors"
 "eslint-rule/no-invalid-regexp":
  prefix: "no-invalid-regexp"
  body: "no-invalid-regexp"
  description: "disallow invalid regular expression strings in `RegExp` constructors"
 "eslint-disable no-invalid-this":
  prefix: "no-invalid-this eslint-disable"
  body: '''
   /* eslint-disable no-invalid-this */
   $1
   /* eslint-enable no-invalid-this */
  '''
  description: "disallow `this` keywords outside of classes or class-like objects"
 "eslint-disable-next-line no-invalid-this":
  prefix: "no-invalid-this eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-invalid-this
   $1
  '''
  description: "disallow `this` keywords outside of classes or class-like objects"
 "eslint-rule/no-invalid-this":
  prefix: "no-invalid-this"
  body: "no-invalid-this"
  description: "disallow `this` keywords outside of classes or class-like objects"
 "eslint-disable no-irregular-whitespace":
  prefix: "no-irregular-whitespace eslint-disable"
  body: '''
   /* eslint-disable no-irregular-whitespace */
   $1
   /* eslint-enable no-irregular-whitespace */
  '''
  description: "disallow irregular whitespace outside of strings and comments"
 "eslint-disable-next-line no-irregular-whitespace":
  prefix: "no-irregular-whitespace eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-irregular-whitespace
   $1
  '''
  description: "disallow irregular whitespace outside of strings and comments"
 "eslint-rule/no-irregular-whitespace":
  prefix: "no-irregular-whitespace"
  body: "no-irregular-whitespace"
  description: "disallow irregular whitespace outside of strings and comments"
 "eslint-disable no-iterator":
  prefix: "no-iterator eslint-disable"
  body: '''
   /* eslint-disable no-iterator */
   $1
   /* eslint-enable no-iterator */
  '''
  description: "disallow the use of the `__iterator__` property"
 "eslint-disable-next-line no-iterator":
  prefix: "no-iterator eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-iterator
   $1
  '''
  description: "disallow the use of the `__iterator__` property"
 "eslint-rule/no-iterator":
  prefix: "no-iterator"
  body: "no-iterator"
  description: "disallow the use of the `__iterator__` property"
 "eslint-disable no-label-var":
  prefix: "no-label-var eslint-disable"
  body: '''
   /* eslint-disable no-label-var */
   $1
   /* eslint-enable no-label-var */
  '''
  description: "disallow labels that share a name with a variable"
 "eslint-disable-next-line no-label-var":
  prefix: "no-label-var eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-label-var
   $1
  '''
  description: "disallow labels that share a name with a variable"
 "eslint-rule/no-label-var":
  prefix: "no-label-var"
  body: "no-label-var"
  description: "disallow labels that share a name with a variable"
 "eslint-disable no-labels":
  prefix: "no-labels eslint-disable"
  body: '''
   /* eslint-disable no-labels */
   $1
   /* eslint-enable no-labels */
  '''
  description: "disallow labeled statements"
 "eslint-disable-next-line no-labels":
  prefix: "no-labels eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-labels
   $1
  '''
  description: "disallow labeled statements"
 "eslint-rule/no-labels":
  prefix: "no-labels"
  body: "no-labels"
  description: "disallow labeled statements"
 "eslint-disable no-lone-blocks":
  prefix: "no-lone-blocks eslint-disable"
  body: '''
   /* eslint-disable no-lone-blocks */
   $1
   /* eslint-enable no-lone-blocks */
  '''
  description: "disallow unnecessary nested blocks"
 "eslint-disable-next-line no-lone-blocks":
  prefix: "no-lone-blocks eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-lone-blocks
   $1
  '''
  description: "disallow unnecessary nested blocks"
 "eslint-rule/no-lone-blocks":
  prefix: "no-lone-blocks"
  body: "no-lone-blocks"
  description: "disallow unnecessary nested blocks"
 "eslint-disable no-lonely-if":
  prefix: "no-lonely-if eslint-disable"
  body: '''
   /* eslint-disable no-lonely-if */
   $1
   /* eslint-enable no-lonely-if */
  '''
  description: "disallow `if` statements as the only statement in `else` blocks"
 "eslint-disable-next-line no-lonely-if":
  prefix: "no-lonely-if eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-lonely-if
   $1
  '''
  description: "disallow `if` statements as the only statement in `else` blocks"
 "eslint-rule/no-lonely-if":
  prefix: "no-lonely-if"
  body: "no-lonely-if"
  description: "disallow `if` statements as the only statement in `else` blocks"
 "eslint-disable no-loop-func":
  prefix: "no-loop-func eslint-disable"
  body: '''
   /* eslint-disable no-loop-func */
   $1
   /* eslint-enable no-loop-func */
  '''
  description: "disallow `function` declarations and expressions inside loop statements"
 "eslint-disable-next-line no-loop-func":
  prefix: "no-loop-func eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-loop-func
   $1
  '''
  description: "disallow `function` declarations and expressions inside loop statements"
 "eslint-rule/no-loop-func":
  prefix: "no-loop-func"
  body: "no-loop-func"
  description: "disallow `function` declarations and expressions inside loop statements"
 "eslint-disable no-magic-numbers":
  prefix: "no-magic-numbers eslint-disable"
  body: '''
   /* eslint-disable no-magic-numbers */
   $1
   /* eslint-enable no-magic-numbers */
  '''
  description: "disallow magic numbers"
 "eslint-disable-next-line no-magic-numbers":
  prefix: "no-magic-numbers eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-magic-numbers
   $1
  '''
  description: "disallow magic numbers"
 "eslint-rule/no-magic-numbers":
  prefix: "no-magic-numbers"
  body: "no-magic-numbers"
  description: "disallow magic numbers"
 "eslint-disable no-mixed-operators":
  prefix: "no-mixed-operators eslint-disable"
  body: '''
   /* eslint-disable no-mixed-operators */
   $1
   /* eslint-enable no-mixed-operators */
  '''
  description: "disallow mixed binary operators"
 "eslint-disable-next-line no-mixed-operators":
  prefix: "no-mixed-operators eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-mixed-operators
   $1
  '''
  description: "disallow mixed binary operators"
 "eslint-rule/no-mixed-operators":
  prefix: "no-mixed-operators"
  body: "no-mixed-operators"
  description: "disallow mixed binary operators"
 "eslint-disable no-mixed-requires":
  prefix: "no-mixed-requires eslint-disable"
  body: '''
   /* eslint-disable no-mixed-requires */
   $1
   /* eslint-enable no-mixed-requires */
  '''
  description: "disallow `require` calls to be mixed with regular variable declarations"
 "eslint-disable-next-line no-mixed-requires":
  prefix: "no-mixed-requires eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-mixed-requires
   $1
  '''
  description: "disallow `require` calls to be mixed with regular variable declarations"
 "eslint-rule/no-mixed-requires":
  prefix: "no-mixed-requires"
  body: "no-mixed-requires"
  description: "disallow `require` calls to be mixed with regular variable declarations"
 "eslint-disable no-mixed-spaces-and-tabs":
  prefix: "no-mixed-spaces-and-tabs eslint-disable"
  body: '''
   /* eslint-disable no-mixed-spaces-and-tabs */
   $1
   /* eslint-enable no-mixed-spaces-and-tabs */
  '''
  description: "disallow mixed spaces and tabs for indentation"
 "eslint-disable-next-line no-mixed-spaces-and-tabs":
  prefix: "no-mixed-spaces-and-tabs eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-mixed-spaces-and-tabs
   $1
  '''
  description: "disallow mixed spaces and tabs for indentation"
 "eslint-rule/no-mixed-spaces-and-tabs":
  prefix: "no-mixed-spaces-and-tabs"
  body: "no-mixed-spaces-and-tabs"
  description: "disallow mixed spaces and tabs for indentation"
 "eslint-disable no-multi-assign":
  prefix: "no-multi-assign eslint-disable"
  body: '''
   /* eslint-disable no-multi-assign */
   $1
   /* eslint-enable no-multi-assign */
  '''
  description: "disallow use of chained assignment expressions"
 "eslint-disable-next-line no-multi-assign":
  prefix: "no-multi-assign eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-multi-assign
   $1
  '''
  description: "disallow use of chained assignment expressions"
 "eslint-rule/no-multi-assign":
  prefix: "no-multi-assign"
  body: "no-multi-assign"
  description: "disallow use of chained assignment expressions"
 "eslint-disable no-multi-spaces":
  prefix: "no-multi-spaces eslint-disable"
  body: '''
   /* eslint-disable no-multi-spaces */
   $1
   /* eslint-enable no-multi-spaces */
  '''
  description: "disallow multiple spaces"
 "eslint-disable-next-line no-multi-spaces":
  prefix: "no-multi-spaces eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-multi-spaces
   $1
  '''
  description: "disallow multiple spaces"
 "eslint-rule/no-multi-spaces":
  prefix: "no-multi-spaces"
  body: "no-multi-spaces"
  description: "disallow multiple spaces"
 "eslint-disable no-multi-str":
  prefix: "no-multi-str eslint-disable"
  body: '''
   /* eslint-disable no-multi-str */
   $1
   /* eslint-enable no-multi-str */
  '''
  description: "disallow multiline strings"
 "eslint-disable-next-line no-multi-str":
  prefix: "no-multi-str eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-multi-str
   $1
  '''
  description: "disallow multiline strings"
 "eslint-rule/no-multi-str":
  prefix: "no-multi-str"
  body: "no-multi-str"
  description: "disallow multiline strings"
 "eslint-disable no-multiple-empty-lines":
  prefix: "no-multiple-empty-lines eslint-disable"
  body: '''
   /* eslint-disable no-multiple-empty-lines */
   $1
   /* eslint-enable no-multiple-empty-lines */
  '''
  description: "disallow multiple empty lines"
 "eslint-disable-next-line no-multiple-empty-lines":
  prefix: "no-multiple-empty-lines eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-multiple-empty-lines
   $1
  '''
  description: "disallow multiple empty lines"
 "eslint-rule/no-multiple-empty-lines":
  prefix: "no-multiple-empty-lines"
  body: "no-multiple-empty-lines"
  description: "disallow multiple empty lines"
 "eslint-disable no-negated-condition":
  prefix: "no-negated-condition eslint-disable"
  body: '''
   /* eslint-disable no-negated-condition */
   $1
   /* eslint-enable no-negated-condition */
  '''
  description: "disallow negated conditions"
 "eslint-disable-next-line no-negated-condition":
  prefix: "no-negated-condition eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-negated-condition
   $1
  '''
  description: "disallow negated conditions"
 "eslint-rule/no-negated-condition":
  prefix: "no-negated-condition"
  body: "no-negated-condition"
  description: "disallow negated conditions"
 "eslint-disable no-nested-ternary":
  prefix: "no-nested-ternary eslint-disable"
  body: '''
   /* eslint-disable no-nested-ternary */
   $1
   /* eslint-enable no-nested-ternary */
  '''
  description: "disallow nested ternary expressions"
 "eslint-disable-next-line no-nested-ternary":
  prefix: "no-nested-ternary eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-nested-ternary
   $1
  '''
  description: "disallow nested ternary expressions"
 "eslint-rule/no-nested-ternary":
  prefix: "no-nested-ternary"
  body: "no-nested-ternary"
  description: "disallow nested ternary expressions"
 "eslint-disable no-new-func":
  prefix: "no-new-func eslint-disable"
  body: '''
   /* eslint-disable no-new-func */
   $1
   /* eslint-enable no-new-func */
  '''
  description: "disallow `new` operators with the `Function` object"
 "eslint-disable-next-line no-new-func":
  prefix: "no-new-func eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-new-func
   $1
  '''
  description: "disallow `new` operators with the `Function` object"
 "eslint-rule/no-new-func":
  prefix: "no-new-func"
  body: "no-new-func"
  description: "disallow `new` operators with the `Function` object"
 "eslint-disable no-new-object":
  prefix: "no-new-object eslint-disable"
  body: '''
   /* eslint-disable no-new-object */
   $1
   /* eslint-enable no-new-object */
  '''
  description: "disallow `Object` constructors"
 "eslint-disable-next-line no-new-object":
  prefix: "no-new-object eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-new-object
   $1
  '''
  description: "disallow `Object` constructors"
 "eslint-rule/no-new-object":
  prefix: "no-new-object"
  body: "no-new-object"
  description: "disallow `Object` constructors"
 "eslint-disable no-new-require":
  prefix: "no-new-require eslint-disable"
  body: '''
   /* eslint-disable no-new-require */
   $1
   /* eslint-enable no-new-require */
  '''
  description: "disallow `new` operators with calls to `require`"
 "eslint-disable-next-line no-new-require":
  prefix: "no-new-require eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-new-require
   $1
  '''
  description: "disallow `new` operators with calls to `require`"
 "eslint-rule/no-new-require":
  prefix: "no-new-require"
  body: "no-new-require"
  description: "disallow `new` operators with calls to `require`"
 "eslint-disable no-new-symbol":
  prefix: "no-new-symbol eslint-disable"
  body: '''
   /* eslint-disable no-new-symbol */
   $1
   /* eslint-enable no-new-symbol */
  '''
  description: "disallow `new` operators with the `Symbol` object"
 "eslint-disable-next-line no-new-symbol":
  prefix: "no-new-symbol eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-new-symbol
   $1
  '''
  description: "disallow `new` operators with the `Symbol` object"
 "eslint-rule/no-new-symbol":
  prefix: "no-new-symbol"
  body: "no-new-symbol"
  description: "disallow `new` operators with the `Symbol` object"
 "eslint-disable no-new-wrappers":
  prefix: "no-new-wrappers eslint-disable"
  body: '''
   /* eslint-disable no-new-wrappers */
   $1
   /* eslint-enable no-new-wrappers */
  '''
  description: "disallow `new` operators with the `String`, `Number`, and `Boolean` objects"
 "eslint-disable-next-line no-new-wrappers":
  prefix: "no-new-wrappers eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-new-wrappers
   $1
  '''
  description: "disallow `new` operators with the `String`, `Number`, and `Boolean` objects"
 "eslint-rule/no-new-wrappers":
  prefix: "no-new-wrappers"
  body: "no-new-wrappers"
  description: "disallow `new` operators with the `String`, `Number`, and `Boolean` objects"
 "eslint-disable no-new":
  prefix: "no-new eslint-disable"
  body: '''
   /* eslint-disable no-new */
   $1
   /* eslint-enable no-new */
  '''
  description: "disallow `new` operators outside of assignments or comparisons"
 "eslint-disable-next-line no-new":
  prefix: "no-new eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-new
   $1
  '''
  description: "disallow `new` operators outside of assignments or comparisons"
 "eslint-rule/no-new":
  prefix: "no-new"
  body: "no-new"
  description: "disallow `new` operators outside of assignments or comparisons"
 "eslint-disable no-obj-calls":
  prefix: "no-obj-calls eslint-disable"
  body: '''
   /* eslint-disable no-obj-calls */
   $1
   /* eslint-enable no-obj-calls */
  '''
  description: "disallow calling global object properties as functions"
 "eslint-disable-next-line no-obj-calls":
  prefix: "no-obj-calls eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-obj-calls
   $1
  '''
  description: "disallow calling global object properties as functions"
 "eslint-rule/no-obj-calls":
  prefix: "no-obj-calls"
  body: "no-obj-calls"
  description: "disallow calling global object properties as functions"
 "eslint-disable no-octal-escape":
  prefix: "no-octal-escape eslint-disable"
  body: '''
   /* eslint-disable no-octal-escape */
   $1
   /* eslint-enable no-octal-escape */
  '''
  description: "disallow octal escape sequences in string literals"
 "eslint-disable-next-line no-octal-escape":
  prefix: "no-octal-escape eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-octal-escape
   $1
  '''
  description: "disallow octal escape sequences in string literals"
 "eslint-rule/no-octal-escape":
  prefix: "no-octal-escape"
  body: "no-octal-escape"
  description: "disallow octal escape sequences in string literals"
 "eslint-disable no-octal":
  prefix: "no-octal eslint-disable"
  body: '''
   /* eslint-disable no-octal */
   $1
   /* eslint-enable no-octal */
  '''
  description: "disallow octal literals"
 "eslint-disable-next-line no-octal":
  prefix: "no-octal eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-octal
   $1
  '''
  description: "disallow octal literals"
 "eslint-rule/no-octal":
  prefix: "no-octal"
  body: "no-octal"
  description: "disallow octal literals"
 "eslint-disable no-param-reassign":
  prefix: "no-param-reassign eslint-disable"
  body: '''
   /* eslint-disable no-param-reassign */
   $1
   /* eslint-enable no-param-reassign */
  '''
  description: "disallow reassigning `function` parameters"
 "eslint-disable-next-line no-param-reassign":
  prefix: "no-param-reassign eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-param-reassign
   $1
  '''
  description: "disallow reassigning `function` parameters"
 "eslint-rule/no-param-reassign":
  prefix: "no-param-reassign"
  body: "no-param-reassign"
  description: "disallow reassigning `function` parameters"
 "eslint-disable no-path-concat":
  prefix: "no-path-concat eslint-disable"
  body: '''
   /* eslint-disable no-path-concat */
   $1
   /* eslint-enable no-path-concat */
  '''
  description: "disallow string concatenation with `__dirname` and `__filename`"
 "eslint-disable-next-line no-path-concat":
  prefix: "no-path-concat eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-path-concat
   $1
  '''
  description: "disallow string concatenation with `__dirname` and `__filename`"
 "eslint-rule/no-path-concat":
  prefix: "no-path-concat"
  body: "no-path-concat"
  description: "disallow string concatenation with `__dirname` and `__filename`"
 "eslint-disable no-plusplus":
  prefix: "no-plusplus eslint-disable"
  body: '''
   /* eslint-disable no-plusplus */
   $1
   /* eslint-enable no-plusplus */
  '''
  description: "disallow the unary operators `++` and `--`"
 "eslint-disable-next-line no-plusplus":
  prefix: "no-plusplus eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-plusplus
   $1
  '''
  description: "disallow the unary operators `++` and `--`"
 "eslint-rule/no-plusplus":
  prefix: "no-plusplus"
  body: "no-plusplus"
  description: "disallow the unary operators `++` and `--`"
 "eslint-disable no-process-env":
  prefix: "no-process-env eslint-disable"
  body: '''
   /* eslint-disable no-process-env */
   $1
   /* eslint-enable no-process-env */
  '''
  description: "disallow the use of `process.env`"
 "eslint-disable-next-line no-process-env":
  prefix: "no-process-env eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-process-env
   $1
  '''
  description: "disallow the use of `process.env`"
 "eslint-rule/no-process-env":
  prefix: "no-process-env"
  body: "no-process-env"
  description: "disallow the use of `process.env`"
 "eslint-disable no-process-exit":
  prefix: "no-process-exit eslint-disable"
  body: '''
   /* eslint-disable no-process-exit */
   $1
   /* eslint-enable no-process-exit */
  '''
  description: "disallow the use of `process.exit()`"
 "eslint-disable-next-line no-process-exit":
  prefix: "no-process-exit eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-process-exit
   $1
  '''
  description: "disallow the use of `process.exit()`"
 "eslint-rule/no-process-exit":
  prefix: "no-process-exit"
  body: "no-process-exit"
  description: "disallow the use of `process.exit()`"
 "eslint-disable no-proto":
  prefix: "no-proto eslint-disable"
  body: '''
   /* eslint-disable no-proto */
   $1
   /* eslint-enable no-proto */
  '''
  description: "disallow the use of the `__proto__` property"
 "eslint-disable-next-line no-proto":
  prefix: "no-proto eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-proto
   $1
  '''
  description: "disallow the use of the `__proto__` property"
 "eslint-rule/no-proto":
  prefix: "no-proto"
  body: "no-proto"
  description: "disallow the use of the `__proto__` property"
 "eslint-disable no-prototype-builtins":
  prefix: "no-prototype-builtins eslint-disable"
  body: '''
   /* eslint-disable no-prototype-builtins */
   $1
   /* eslint-enable no-prototype-builtins */
  '''
  description: "disallow calling some `Object.prototype` methods directly on objects"
 "eslint-disable-next-line no-prototype-builtins":
  prefix: "no-prototype-builtins eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-prototype-builtins
   $1
  '''
  description: "disallow calling some `Object.prototype` methods directly on objects"
 "eslint-rule/no-prototype-builtins":
  prefix: "no-prototype-builtins"
  body: "no-prototype-builtins"
  description: "disallow calling some `Object.prototype` methods directly on objects"
 "eslint-disable no-redeclare":
  prefix: "no-redeclare eslint-disable"
  body: '''
   /* eslint-disable no-redeclare */
   $1
   /* eslint-enable no-redeclare */
  '''
  description: "disallow variable redeclaration"
 "eslint-disable-next-line no-redeclare":
  prefix: "no-redeclare eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-redeclare
   $1
  '''
  description: "disallow variable redeclaration"
 "eslint-rule/no-redeclare":
  prefix: "no-redeclare"
  body: "no-redeclare"
  description: "disallow variable redeclaration"
 "eslint-disable no-regex-spaces":
  prefix: "no-regex-spaces eslint-disable"
  body: '''
   /* eslint-disable no-regex-spaces */
   $1
   /* eslint-enable no-regex-spaces */
  '''
  description: "disallow multiple spaces in regular expressions"
 "eslint-disable-next-line no-regex-spaces":
  prefix: "no-regex-spaces eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-regex-spaces
   $1
  '''
  description: "disallow multiple spaces in regular expressions"
 "eslint-rule/no-regex-spaces":
  prefix: "no-regex-spaces"
  body: "no-regex-spaces"
  description: "disallow multiple spaces in regular expressions"
 "eslint-disable no-restricted-globals":
  prefix: "no-restricted-globals eslint-disable"
  body: '''
   /* eslint-disable no-restricted-globals */
   $1
   /* eslint-enable no-restricted-globals */
  '''
  description: "disallow specified global variables"
 "eslint-disable-next-line no-restricted-globals":
  prefix: "no-restricted-globals eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-restricted-globals
   $1
  '''
  description: "disallow specified global variables"
 "eslint-rule/no-restricted-globals":
  prefix: "no-restricted-globals"
  body: "no-restricted-globals"
  description: "disallow specified global variables"
 "eslint-disable no-restricted-imports":
  prefix: "no-restricted-imports eslint-disable"
  body: '''
   /* eslint-disable no-restricted-imports */
   $1
   /* eslint-enable no-restricted-imports */
  '''
  description: "disallow specified modules when loaded by `import`"
 "eslint-disable-next-line no-restricted-imports":
  prefix: "no-restricted-imports eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-restricted-imports
   $1
  '''
  description: "disallow specified modules when loaded by `import`"
 "eslint-rule/no-restricted-imports":
  prefix: "no-restricted-imports"
  body: "no-restricted-imports"
  description: "disallow specified modules when loaded by `import`"
 "eslint-disable no-restricted-modules":
  prefix: "no-restricted-modules eslint-disable"
  body: '''
   /* eslint-disable no-restricted-modules */
   $1
   /* eslint-enable no-restricted-modules */
  '''
  description: "disallow specified modules when loaded by `require`"
 "eslint-disable-next-line no-restricted-modules":
  prefix: "no-restricted-modules eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-restricted-modules
   $1
  '''
  description: "disallow specified modules when loaded by `require`"
 "eslint-rule/no-restricted-modules":
  prefix: "no-restricted-modules"
  body: "no-restricted-modules"
  description: "disallow specified modules when loaded by `require`"
 "eslint-disable no-restricted-properties":
  prefix: "no-restricted-properties eslint-disable"
  body: '''
   /* eslint-disable no-restricted-properties */
   $1
   /* eslint-enable no-restricted-properties */
  '''
  description: "disallow certain properties on certain objects"
 "eslint-disable-next-line no-restricted-properties":
  prefix: "no-restricted-properties eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-restricted-properties
   $1
  '''
  description: "disallow certain properties on certain objects"
 "eslint-rule/no-restricted-properties":
  prefix: "no-restricted-properties"
  body: "no-restricted-properties"
  description: "disallow certain properties on certain objects"
 "eslint-disable no-restricted-syntax":
  prefix: "no-restricted-syntax eslint-disable"
  body: '''
   /* eslint-disable no-restricted-syntax */
   $1
   /* eslint-enable no-restricted-syntax */
  '''
  description: "disallow specified syntax"
 "eslint-disable-next-line no-restricted-syntax":
  prefix: "no-restricted-syntax eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-restricted-syntax
   $1
  '''
  description: "disallow specified syntax"
 "eslint-rule/no-restricted-syntax":
  prefix: "no-restricted-syntax"
  body: "no-restricted-syntax"
  description: "disallow specified syntax"
 "eslint-disable no-return-assign":
  prefix: "no-return-assign eslint-disable"
  body: '''
   /* eslint-disable no-return-assign */
   $1
   /* eslint-enable no-return-assign */
  '''
  description: "disallow assignment operators in `return` statements"
 "eslint-disable-next-line no-return-assign":
  prefix: "no-return-assign eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-return-assign
   $1
  '''
  description: "disallow assignment operators in `return` statements"
 "eslint-rule/no-return-assign":
  prefix: "no-return-assign"
  body: "no-return-assign"
  description: "disallow assignment operators in `return` statements"
 "eslint-disable no-return-await":
  prefix: "no-return-await eslint-disable"
  body: '''
   /* eslint-disable no-return-await */
   $1
   /* eslint-enable no-return-await */
  '''
  description: "disallow unnecessary `return await`"
 "eslint-disable-next-line no-return-await":
  prefix: "no-return-await eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-return-await
   $1
  '''
  description: "disallow unnecessary `return await`"
 "eslint-rule/no-return-await":
  prefix: "no-return-await"
  body: "no-return-await"
  description: "disallow unnecessary `return await`"
 "eslint-disable no-script-url":
  prefix: "no-script-url eslint-disable"
  body: '''
   /* eslint-disable no-script-url */
   $1
   /* eslint-enable no-script-url */
  '''
  description: "disallow `javascript:` urls"
 "eslint-disable-next-line no-script-url":
  prefix: "no-script-url eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-script-url
   $1
  '''
  description: "disallow `javascript:` urls"
 "eslint-rule/no-script-url":
  prefix: "no-script-url"
  body: "no-script-url"
  description: "disallow `javascript:` urls"
 "eslint-disable no-self-assign":
  prefix: "no-self-assign eslint-disable"
  body: '''
   /* eslint-disable no-self-assign */
   $1
   /* eslint-enable no-self-assign */
  '''
  description: "disallow assignments where both sides are exactly the same"
 "eslint-disable-next-line no-self-assign":
  prefix: "no-self-assign eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-self-assign
   $1
  '''
  description: "disallow assignments where both sides are exactly the same"
 "eslint-rule/no-self-assign":
  prefix: "no-self-assign"
  body: "no-self-assign"
  description: "disallow assignments where both sides are exactly the same"
 "eslint-disable no-self-compare":
  prefix: "no-self-compare eslint-disable"
  body: '''
   /* eslint-disable no-self-compare */
   $1
   /* eslint-enable no-self-compare */
  '''
  description: "disallow comparisons where both sides are exactly the same"
 "eslint-disable-next-line no-self-compare":
  prefix: "no-self-compare eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-self-compare
   $1
  '''
  description: "disallow comparisons where both sides are exactly the same"
 "eslint-rule/no-self-compare":
  prefix: "no-self-compare"
  body: "no-self-compare"
  description: "disallow comparisons where both sides are exactly the same"
 "eslint-disable no-sequences":
  prefix: "no-sequences eslint-disable"
  body: '''
   /* eslint-disable no-sequences */
   $1
   /* eslint-enable no-sequences */
  '''
  description: "disallow comma operators"
 "eslint-disable-next-line no-sequences":
  prefix: "no-sequences eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-sequences
   $1
  '''
  description: "disallow comma operators"
 "eslint-rule/no-sequences":
  prefix: "no-sequences"
  body: "no-sequences"
  description: "disallow comma operators"
 "eslint-disable no-shadow-restricted-names":
  prefix: "no-shadow-restricted-names eslint-disable"
  body: '''
   /* eslint-disable no-shadow-restricted-names */
   $1
   /* eslint-enable no-shadow-restricted-names */
  '''
  description: "disallow identifiers from shadowing restricted names"
 "eslint-disable-next-line no-shadow-restricted-names":
  prefix: "no-shadow-restricted-names eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-shadow-restricted-names
   $1
  '''
  description: "disallow identifiers from shadowing restricted names"
 "eslint-rule/no-shadow-restricted-names":
  prefix: "no-shadow-restricted-names"
  body: "no-shadow-restricted-names"
  description: "disallow identifiers from shadowing restricted names"
 "eslint-disable no-shadow":
  prefix: "no-shadow eslint-disable"
  body: '''
   /* eslint-disable no-shadow */
   $1
   /* eslint-enable no-shadow */
  '''
  description: "disallow variable declarations from shadowing variables declared in the outer scope"
 "eslint-disable-next-line no-shadow":
  prefix: "no-shadow eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-shadow
   $1
  '''
  description: "disallow variable declarations from shadowing variables declared in the outer scope"
 "eslint-rule/no-shadow":
  prefix: "no-shadow"
  body: "no-shadow"
  description: "disallow variable declarations from shadowing variables declared in the outer scope"
 "eslint-disable no-sparse-arrays":
  prefix: "no-sparse-arrays eslint-disable"
  body: '''
   /* eslint-disable no-sparse-arrays */
   $1
   /* eslint-enable no-sparse-arrays */
  '''
  description: "disallow sparse arrays"
 "eslint-disable-next-line no-sparse-arrays":
  prefix: "no-sparse-arrays eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-sparse-arrays
   $1
  '''
  description: "disallow sparse arrays"
 "eslint-rule/no-sparse-arrays":
  prefix: "no-sparse-arrays"
  body: "no-sparse-arrays"
  description: "disallow sparse arrays"
 "eslint-disable no-sync":
  prefix: "no-sync eslint-disable"
  body: '''
   /* eslint-disable no-sync */
   $1
   /* eslint-enable no-sync */
  '''
  description: "disallow synchronous methods"
 "eslint-disable-next-line no-sync":
  prefix: "no-sync eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-sync
   $1
  '''
  description: "disallow synchronous methods"
 "eslint-rule/no-sync":
  prefix: "no-sync"
  body: "no-sync"
  description: "disallow synchronous methods"
 "eslint-disable no-tabs":
  prefix: "no-tabs eslint-disable"
  body: '''
   /* eslint-disable no-tabs */
   $1
   /* eslint-enable no-tabs */
  '''
  description: "disallow all tabs"
 "eslint-disable-next-line no-tabs":
  prefix: "no-tabs eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-tabs
   $1
  '''
  description: "disallow all tabs"
 "eslint-rule/no-tabs":
  prefix: "no-tabs"
  body: "no-tabs"
  description: "disallow all tabs"
 "eslint-disable no-template-curly-in-string":
  prefix: "no-template-curly-in-string eslint-disable"
  body: '''
   /* eslint-disable no-template-curly-in-string */
   $1
   /* eslint-enable no-template-curly-in-string */
  '''
  description: "disallow template literal placeholder syntax in regular strings"
 "eslint-disable-next-line no-template-curly-in-string":
  prefix: "no-template-curly-in-string eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-template-curly-in-string
   $1
  '''
  description: "disallow template literal placeholder syntax in regular strings"
 "eslint-rule/no-template-curly-in-string":
  prefix: "no-template-curly-in-string"
  body: "no-template-curly-in-string"
  description: "disallow template literal placeholder syntax in regular strings"
 "eslint-disable no-ternary":
  prefix: "no-ternary eslint-disable"
  body: '''
   /* eslint-disable no-ternary */
   $1
   /* eslint-enable no-ternary */
  '''
  description: "disallow ternary operators"
 "eslint-disable-next-line no-ternary":
  prefix: "no-ternary eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-ternary
   $1
  '''
  description: "disallow ternary operators"
 "eslint-rule/no-ternary":
  prefix: "no-ternary"
  body: "no-ternary"
  description: "disallow ternary operators"
 "eslint-disable no-this-before-super":
  prefix: "no-this-before-super eslint-disable"
  body: '''
   /* eslint-disable no-this-before-super */
   $1
   /* eslint-enable no-this-before-super */
  '''
  description: "disallow `this`/`super` before calling `super()` in constructors"
 "eslint-disable-next-line no-this-before-super":
  prefix: "no-this-before-super eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-this-before-super
   $1
  '''
  description: "disallow `this`/`super` before calling `super()` in constructors"
 "eslint-rule/no-this-before-super":
  prefix: "no-this-before-super"
  body: "no-this-before-super"
  description: "disallow `this`/`super` before calling `super()` in constructors"
 "eslint-disable no-throw-literal":
  prefix: "no-throw-literal eslint-disable"
  body: '''
   /* eslint-disable no-throw-literal */
   $1
   /* eslint-enable no-throw-literal */
  '''
  description: "disallow throwing literals as exceptions"
 "eslint-disable-next-line no-throw-literal":
  prefix: "no-throw-literal eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-throw-literal
   $1
  '''
  description: "disallow throwing literals as exceptions"
 "eslint-rule/no-throw-literal":
  prefix: "no-throw-literal"
  body: "no-throw-literal"
  description: "disallow throwing literals as exceptions"
 "eslint-disable no-trailing-spaces":
  prefix: "no-trailing-spaces eslint-disable"
  body: '''
   /* eslint-disable no-trailing-spaces */
   $1
   /* eslint-enable no-trailing-spaces */
  '''
  description: "disallow trailing whitespace at the end of lines"
 "eslint-disable-next-line no-trailing-spaces":
  prefix: "no-trailing-spaces eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-trailing-spaces
   $1
  '''
  description: "disallow trailing whitespace at the end of lines"
 "eslint-rule/no-trailing-spaces":
  prefix: "no-trailing-spaces"
  body: "no-trailing-spaces"
  description: "disallow trailing whitespace at the end of lines"
 "eslint-disable no-undef-init":
  prefix: "no-undef-init eslint-disable"
  body: '''
   /* eslint-disable no-undef-init */
   $1
   /* eslint-enable no-undef-init */
  '''
  description: "disallow initializing variables to `undefined`"
 "eslint-disable-next-line no-undef-init":
  prefix: "no-undef-init eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-undef-init
   $1
  '''
  description: "disallow initializing variables to `undefined`"
 "eslint-rule/no-undef-init":
  prefix: "no-undef-init"
  body: "no-undef-init"
  description: "disallow initializing variables to `undefined`"
 "eslint-disable no-undef":
  prefix: "no-undef eslint-disable"
  body: '''
   /* eslint-disable no-undef */
   $1
   /* eslint-enable no-undef */
  '''
  description: "disallow the use of undeclared variables unless mentioned in `/*global */` comments"
 "eslint-disable-next-line no-undef":
  prefix: "no-undef eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-undef
   $1
  '''
  description: "disallow the use of undeclared variables unless mentioned in `/*global */` comments"
 "eslint-rule/no-undef":
  prefix: "no-undef"
  body: "no-undef"
  description: "disallow the use of undeclared variables unless mentioned in `/*global */` comments"
 "eslint-disable no-undefined":
  prefix: "no-undefined eslint-disable"
  body: '''
   /* eslint-disable no-undefined */
   $1
   /* eslint-enable no-undefined */
  '''
  description: "disallow the use of `undefined` as an identifier"
 "eslint-disable-next-line no-undefined":
  prefix: "no-undefined eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-undefined
   $1
  '''
  description: "disallow the use of `undefined` as an identifier"
 "eslint-rule/no-undefined":
  prefix: "no-undefined"
  body: "no-undefined"
  description: "disallow the use of `undefined` as an identifier"
 "eslint-disable no-underscore-dangle":
  prefix: "no-underscore-dangle eslint-disable"
  body: '''
   /* eslint-disable no-underscore-dangle */
   $1
   /* eslint-enable no-underscore-dangle */
  '''
  description: "disallow dangling underscores in identifiers"
 "eslint-disable-next-line no-underscore-dangle":
  prefix: "no-underscore-dangle eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-underscore-dangle
   $1
  '''
  description: "disallow dangling underscores in identifiers"
 "eslint-rule/no-underscore-dangle":
  prefix: "no-underscore-dangle"
  body: "no-underscore-dangle"
  description: "disallow dangling underscores in identifiers"
 "eslint-disable no-unexpected-multiline":
  prefix: "no-unexpected-multiline eslint-disable"
  body: '''
   /* eslint-disable no-unexpected-multiline */
   $1
   /* eslint-enable no-unexpected-multiline */
  '''
  description: "disallow confusing multiline expressions"
 "eslint-disable-next-line no-unexpected-multiline":
  prefix: "no-unexpected-multiline eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-unexpected-multiline
   $1
  '''
  description: "disallow confusing multiline expressions"
 "eslint-rule/no-unexpected-multiline":
  prefix: "no-unexpected-multiline"
  body: "no-unexpected-multiline"
  description: "disallow confusing multiline expressions"
 "eslint-disable no-unmodified-loop-condition":
  prefix: "no-unmodified-loop-condition eslint-disable"
  body: '''
   /* eslint-disable no-unmodified-loop-condition */
   $1
   /* eslint-enable no-unmodified-loop-condition */
  '''
  description: "disallow unmodified loop conditions"
 "eslint-disable-next-line no-unmodified-loop-condition":
  prefix: "no-unmodified-loop-condition eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-unmodified-loop-condition
   $1
  '''
  description: "disallow unmodified loop conditions"
 "eslint-rule/no-unmodified-loop-condition":
  prefix: "no-unmodified-loop-condition"
  body: "no-unmodified-loop-condition"
  description: "disallow unmodified loop conditions"
 "eslint-disable no-unneeded-ternary":
  prefix: "no-unneeded-ternary eslint-disable"
  body: '''
   /* eslint-disable no-unneeded-ternary */
   $1
   /* eslint-enable no-unneeded-ternary */
  '''
  description: "disallow ternary operators when simpler alternatives exist"
 "eslint-disable-next-line no-unneeded-ternary":
  prefix: "no-unneeded-ternary eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-unneeded-ternary
   $1
  '''
  description: "disallow ternary operators when simpler alternatives exist"
 "eslint-rule/no-unneeded-ternary":
  prefix: "no-unneeded-ternary"
  body: "no-unneeded-ternary"
  description: "disallow ternary operators when simpler alternatives exist"
 "eslint-disable no-unreachable":
  prefix: "no-unreachable eslint-disable"
  body: '''
   /* eslint-disable no-unreachable */
   $1
   /* eslint-enable no-unreachable */
  '''
  description: "disallow unreachable code after `return`, `throw`, `continue`, and `break` statements"
 "eslint-disable-next-line no-unreachable":
  prefix: "no-unreachable eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-unreachable
   $1
  '''
  description: "disallow unreachable code after `return`, `throw`, `continue`, and `break` statements"
 "eslint-rule/no-unreachable":
  prefix: "no-unreachable"
  body: "no-unreachable"
  description: "disallow unreachable code after `return`, `throw`, `continue`, and `break` statements"
 "eslint-disable no-unsafe-finally":
  prefix: "no-unsafe-finally eslint-disable"
  body: '''
   /* eslint-disable no-unsafe-finally */
   $1
   /* eslint-enable no-unsafe-finally */
  '''
  description: "disallow control flow statements in `finally` blocks"
 "eslint-disable-next-line no-unsafe-finally":
  prefix: "no-unsafe-finally eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-unsafe-finally
   $1
  '''
  description: "disallow control flow statements in `finally` blocks"
 "eslint-rule/no-unsafe-finally":
  prefix: "no-unsafe-finally"
  body: "no-unsafe-finally"
  description: "disallow control flow statements in `finally` blocks"
 "eslint-disable no-unsafe-negation":
  prefix: "no-unsafe-negation eslint-disable"
  body: '''
   /* eslint-disable no-unsafe-negation */
   $1
   /* eslint-enable no-unsafe-negation */
  '''
  description: "disallow negating the left operand of relational operators"
 "eslint-disable-next-line no-unsafe-negation":
  prefix: "no-unsafe-negation eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-unsafe-negation
   $1
  '''
  description: "disallow negating the left operand of relational operators"
 "eslint-rule/no-unsafe-negation":
  prefix: "no-unsafe-negation"
  body: "no-unsafe-negation"
  description: "disallow negating the left operand of relational operators"
 "eslint-disable no-unused-expressions":
  prefix: "no-unused-expressions eslint-disable"
  body: '''
   /* eslint-disable no-unused-expressions */
   $1
   /* eslint-enable no-unused-expressions */
  '''
  description: "disallow unused expressions"
 "eslint-disable-next-line no-unused-expressions":
  prefix: "no-unused-expressions eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-unused-expressions
   $1
  '''
  description: "disallow unused expressions"
 "eslint-rule/no-unused-expressions":
  prefix: "no-unused-expressions"
  body: "no-unused-expressions"
  description: "disallow unused expressions"
 "eslint-disable no-unused-labels":
  prefix: "no-unused-labels eslint-disable"
  body: '''
   /* eslint-disable no-unused-labels */
   $1
   /* eslint-enable no-unused-labels */
  '''
  description: "disallow unused labels"
 "eslint-disable-next-line no-unused-labels":
  prefix: "no-unused-labels eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-unused-labels
   $1
  '''
  description: "disallow unused labels"
 "eslint-rule/no-unused-labels":
  prefix: "no-unused-labels"
  body: "no-unused-labels"
  description: "disallow unused labels"
 "eslint-disable no-unused-vars":
  prefix: "no-unused-vars eslint-disable"
  body: '''
   /* eslint-disable no-unused-vars */
   $1
   /* eslint-enable no-unused-vars */
  '''
  description: "disallow unused variables"
 "eslint-disable-next-line no-unused-vars":
  prefix: "no-unused-vars eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-unused-vars
   $1
  '''
  description: "disallow unused variables"
 "eslint-rule/no-unused-vars":
  prefix: "no-unused-vars"
  body: "no-unused-vars"
  description: "disallow unused variables"
 "eslint-disable no-use-before-define":
  prefix: "no-use-before-define eslint-disable"
  body: '''
   /* eslint-disable no-use-before-define */
   $1
   /* eslint-enable no-use-before-define */
  '''
  description: "disallow the use of variables before they are defined"
 "eslint-disable-next-line no-use-before-define":
  prefix: "no-use-before-define eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-use-before-define
   $1
  '''
  description: "disallow the use of variables before they are defined"
 "eslint-rule/no-use-before-define":
  prefix: "no-use-before-define"
  body: "no-use-before-define"
  description: "disallow the use of variables before they are defined"
 "eslint-disable no-useless-call":
  prefix: "no-useless-call eslint-disable"
  body: '''
   /* eslint-disable no-useless-call */
   $1
   /* eslint-enable no-useless-call */
  '''
  description: "disallow unnecessary calls to `.call()` and `.apply()`"
 "eslint-disable-next-line no-useless-call":
  prefix: "no-useless-call eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-useless-call
   $1
  '''
  description: "disallow unnecessary calls to `.call()` and `.apply()`"
 "eslint-rule/no-useless-call":
  prefix: "no-useless-call"
  body: "no-useless-call"
  description: "disallow unnecessary calls to `.call()` and `.apply()`"
 "eslint-disable no-useless-computed-key":
  prefix: "no-useless-computed-key eslint-disable"
  body: '''
   /* eslint-disable no-useless-computed-key */
   $1
   /* eslint-enable no-useless-computed-key */
  '''
  description: "disallow unnecessary computed property keys in object literals"
 "eslint-disable-next-line no-useless-computed-key":
  prefix: "no-useless-computed-key eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-useless-computed-key
   $1
  '''
  description: "disallow unnecessary computed property keys in object literals"
 "eslint-rule/no-useless-computed-key":
  prefix: "no-useless-computed-key"
  body: "no-useless-computed-key"
  description: "disallow unnecessary computed property keys in object literals"
 "eslint-disable no-useless-concat":
  prefix: "no-useless-concat eslint-disable"
  body: '''
   /* eslint-disable no-useless-concat */
   $1
   /* eslint-enable no-useless-concat */
  '''
  description: "disallow unnecessary concatenation of literals or template literals"
 "eslint-disable-next-line no-useless-concat":
  prefix: "no-useless-concat eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-useless-concat
   $1
  '''
  description: "disallow unnecessary concatenation of literals or template literals"
 "eslint-rule/no-useless-concat":
  prefix: "no-useless-concat"
  body: "no-useless-concat"
  description: "disallow unnecessary concatenation of literals or template literals"
 "eslint-disable no-useless-constructor":
  prefix: "no-useless-constructor eslint-disable"
  body: '''
   /* eslint-disable no-useless-constructor */
   $1
   /* eslint-enable no-useless-constructor */
  '''
  description: "disallow unnecessary constructors"
 "eslint-disable-next-line no-useless-constructor":
  prefix: "no-useless-constructor eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-useless-constructor
   $1
  '''
  description: "disallow unnecessary constructors"
 "eslint-rule/no-useless-constructor":
  prefix: "no-useless-constructor"
  body: "no-useless-constructor"
  description: "disallow unnecessary constructors"
 "eslint-disable no-useless-escape":
  prefix: "no-useless-escape eslint-disable"
  body: '''
   /* eslint-disable no-useless-escape */
   $1
   /* eslint-enable no-useless-escape */
  '''
  description: "disallow unnecessary escape characters"
 "eslint-disable-next-line no-useless-escape":
  prefix: "no-useless-escape eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-useless-escape
   $1
  '''
  description: "disallow unnecessary escape characters"
 "eslint-rule/no-useless-escape":
  prefix: "no-useless-escape"
  body: "no-useless-escape"
  description: "disallow unnecessary escape characters"
 "eslint-disable no-useless-rename":
  prefix: "no-useless-rename eslint-disable"
  body: '''
   /* eslint-disable no-useless-rename */
   $1
   /* eslint-enable no-useless-rename */
  '''
  description: "disallow renaming import, export, and destructured assignments to the same name"
 "eslint-disable-next-line no-useless-rename":
  prefix: "no-useless-rename eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-useless-rename
   $1
  '''
  description: "disallow renaming import, export, and destructured assignments to the same name"
 "eslint-rule/no-useless-rename":
  prefix: "no-useless-rename"
  body: "no-useless-rename"
  description: "disallow renaming import, export, and destructured assignments to the same name"
 "eslint-disable no-useless-return":
  prefix: "no-useless-return eslint-disable"
  body: '''
   /* eslint-disable no-useless-return */
   $1
   /* eslint-enable no-useless-return */
  '''
  description: "disallow redundant return statements"
 "eslint-disable-next-line no-useless-return":
  prefix: "no-useless-return eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-useless-return
   $1
  '''
  description: "disallow redundant return statements"
 "eslint-rule/no-useless-return":
  prefix: "no-useless-return"
  body: "no-useless-return"
  description: "disallow redundant return statements"
 "eslint-disable no-var":
  prefix: "no-var eslint-disable"
  body: '''
   /* eslint-disable no-var */
   $1
   /* eslint-enable no-var */
  '''
  description: "require `let` or `const` instead of `var`"
 "eslint-disable-next-line no-var":
  prefix: "no-var eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-var
   $1
  '''
  description: "require `let` or `const` instead of `var`"
 "eslint-rule/no-var":
  prefix: "no-var"
  body: "no-var"
  description: "require `let` or `const` instead of `var`"
 "eslint-disable no-void":
  prefix: "no-void eslint-disable"
  body: '''
   /* eslint-disable no-void */
   $1
   /* eslint-enable no-void */
  '''
  description: "disallow `void` operators"
 "eslint-disable-next-line no-void":
  prefix: "no-void eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-void
   $1
  '''
  description: "disallow `void` operators"
 "eslint-rule/no-void":
  prefix: "no-void"
  body: "no-void"
  description: "disallow `void` operators"
 "eslint-disable no-warning-comments":
  prefix: "no-warning-comments eslint-disable"
  body: '''
   /* eslint-disable no-warning-comments */
   $1
   /* eslint-enable no-warning-comments */
  '''
  description: "disallow specified warning terms in comments"
 "eslint-disable-next-line no-warning-comments":
  prefix: "no-warning-comments eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-warning-comments
   $1
  '''
  description: "disallow specified warning terms in comments"
 "eslint-rule/no-warning-comments":
  prefix: "no-warning-comments"
  body: "no-warning-comments"
  description: "disallow specified warning terms in comments"
 "eslint-disable no-whitespace-before-property":
  prefix: "no-whitespace-before-property eslint-disable"
  body: '''
   /* eslint-disable no-whitespace-before-property */
   $1
   /* eslint-enable no-whitespace-before-property */
  '''
  description: "disallow whitespace before properties"
 "eslint-disable-next-line no-whitespace-before-property":
  prefix: "no-whitespace-before-property eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-whitespace-before-property
   $1
  '''
  description: "disallow whitespace before properties"
 "eslint-rule/no-whitespace-before-property":
  prefix: "no-whitespace-before-property"
  body: "no-whitespace-before-property"
  description: "disallow whitespace before properties"
 "eslint-disable no-with":
  prefix: "no-with eslint-disable"
  body: '''
   /* eslint-disable no-with */
   $1
   /* eslint-enable no-with */
  '''
  description: "disallow `with` statements"
 "eslint-disable-next-line no-with":
  prefix: "no-with eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line no-with
   $1
  '''
  description: "disallow `with` statements"
 "eslint-rule/no-with":
  prefix: "no-with"
  body: "no-with"
  description: "disallow `with` statements"
 "eslint-disable nonblock-statement-body-position":
  prefix: "nonblock-statement-body-position eslint-disable"
  body: '''
   /* eslint-disable nonblock-statement-body-position */
   $1
   /* eslint-enable nonblock-statement-body-position */
  '''
  description: "enforce the location of single-line statements"
 "eslint-disable-next-line nonblock-statement-body-position":
  prefix: "nonblock-statement-body-position eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line nonblock-statement-body-position
   $1
  '''
  description: "enforce the location of single-line statements"
 "eslint-rule/nonblock-statement-body-position":
  prefix: "nonblock-statement-body-position"
  body: "nonblock-statement-body-position"
  description: "enforce the location of single-line statements"
 "eslint-disable object-curly-newline":
  prefix: "object-curly-newline eslint-disable"
  body: '''
   /* eslint-disable object-curly-newline */
   $1
   /* eslint-enable object-curly-newline */
  '''
  description: "enforce consistent line breaks inside braces"
 "eslint-disable-next-line object-curly-newline":
  prefix: "object-curly-newline eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line object-curly-newline
   $1
  '''
  description: "enforce consistent line breaks inside braces"
 "eslint-rule/object-curly-newline":
  prefix: "object-curly-newline"
  body: "object-curly-newline"
  description: "enforce consistent line breaks inside braces"
 "eslint-disable object-curly-spacing":
  prefix: "object-curly-spacing eslint-disable"
  body: '''
   /* eslint-disable object-curly-spacing */
   $1
   /* eslint-enable object-curly-spacing */
  '''
  description: "enforce consistent spacing inside braces"
 "eslint-disable-next-line object-curly-spacing":
  prefix: "object-curly-spacing eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line object-curly-spacing
   $1
  '''
  description: "enforce consistent spacing inside braces"
 "eslint-rule/object-curly-spacing":
  prefix: "object-curly-spacing"
  body: "object-curly-spacing"
  description: "enforce consistent spacing inside braces"
 "eslint-disable object-property-newline":
  prefix: "object-property-newline eslint-disable"
  body: '''
   /* eslint-disable object-property-newline */
   $1
   /* eslint-enable object-property-newline */
  '''
  description: "enforce placing object properties on separate lines"
 "eslint-disable-next-line object-property-newline":
  prefix: "object-property-newline eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line object-property-newline
   $1
  '''
  description: "enforce placing object properties on separate lines"
 "eslint-rule/object-property-newline":
  prefix: "object-property-newline"
  body: "object-property-newline"
  description: "enforce placing object properties on separate lines"
 "eslint-disable object-shorthand":
  prefix: "object-shorthand eslint-disable"
  body: '''
   /* eslint-disable object-shorthand */
   $1
   /* eslint-enable object-shorthand */
  '''
  description: "require or disallow method and property shorthand syntax for object literals"
 "eslint-disable-next-line object-shorthand":
  prefix: "object-shorthand eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line object-shorthand
   $1
  '''
  description: "require or disallow method and property shorthand syntax for object literals"
 "eslint-rule/object-shorthand":
  prefix: "object-shorthand"
  body: "object-shorthand"
  description: "require or disallow method and property shorthand syntax for object literals"
 "eslint-disable one-var-declaration-per-line":
  prefix: "one-var-declaration-per-line eslint-disable"
  body: '''
   /* eslint-disable one-var-declaration-per-line */
   $1
   /* eslint-enable one-var-declaration-per-line */
  '''
  description: "require or disallow newlines around variable declarations"
 "eslint-disable-next-line one-var-declaration-per-line":
  prefix: "one-var-declaration-per-line eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line one-var-declaration-per-line
   $1
  '''
  description: "require or disallow newlines around variable declarations"
 "eslint-rule/one-var-declaration-per-line":
  prefix: "one-var-declaration-per-line"
  body: "one-var-declaration-per-line"
  description: "require or disallow newlines around variable declarations"
 "eslint-disable one-var":
  prefix: "one-var eslint-disable"
  body: '''
   /* eslint-disable one-var */
   $1
   /* eslint-enable one-var */
  '''
  description: "enforce variables to be declared either together or separately in functions"
 "eslint-disable-next-line one-var":
  prefix: "one-var eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line one-var
   $1
  '''
  description: "enforce variables to be declared either together or separately in functions"
 "eslint-rule/one-var":
  prefix: "one-var"
  body: "one-var"
  description: "enforce variables to be declared either together or separately in functions"
 "eslint-disable operator-assignment":
  prefix: "operator-assignment eslint-disable"
  body: '''
   /* eslint-disable operator-assignment */
   $1
   /* eslint-enable operator-assignment */
  '''
  description: "require or disallow assignment operator shorthand where possible"
 "eslint-disable-next-line operator-assignment":
  prefix: "operator-assignment eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line operator-assignment
   $1
  '''
  description: "require or disallow assignment operator shorthand where possible"
 "eslint-rule/operator-assignment":
  prefix: "operator-assignment"
  body: "operator-assignment"
  description: "require or disallow assignment operator shorthand where possible"
 "eslint-disable operator-linebreak":
  prefix: "operator-linebreak eslint-disable"
  body: '''
   /* eslint-disable operator-linebreak */
   $1
   /* eslint-enable operator-linebreak */
  '''
  description: "enforce consistent linebreak style for operators"
 "eslint-disable-next-line operator-linebreak":
  prefix: "operator-linebreak eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line operator-linebreak
   $1
  '''
  description: "enforce consistent linebreak style for operators"
 "eslint-rule/operator-linebreak":
  prefix: "operator-linebreak"
  body: "operator-linebreak"
  description: "enforce consistent linebreak style for operators"
 "eslint-disable padded-blocks":
  prefix: "padded-blocks eslint-disable"
  body: '''
   /* eslint-disable padded-blocks */
   $1
   /* eslint-enable padded-blocks */
  '''
  description: "require or disallow padding within blocks"
 "eslint-disable-next-line padded-blocks":
  prefix: "padded-blocks eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line padded-blocks
   $1
  '''
  description: "require or disallow padding within blocks"
 "eslint-rule/padded-blocks":
  prefix: "padded-blocks"
  body: "padded-blocks"
  description: "require or disallow padding within blocks"
 "eslint-disable padding-line-between-statements":
  prefix: "padding-line-between-statements eslint-disable"
  body: '''
   /* eslint-disable padding-line-between-statements */
   $1
   /* eslint-enable padding-line-between-statements */
  '''
  description: "require or disallow padding lines between statements"
 "eslint-disable-next-line padding-line-between-statements":
  prefix: "padding-line-between-statements eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line padding-line-between-statements
   $1
  '''
  description: "require or disallow padding lines between statements"
 "eslint-rule/padding-line-between-statements":
  prefix: "padding-line-between-statements"
  body: "padding-line-between-statements"
  description: "require or disallow padding lines between statements"
 "eslint-disable prefer-arrow-callback":
  prefix: "prefer-arrow-callback eslint-disable"
  body: '''
   /* eslint-disable prefer-arrow-callback */
   $1
   /* eslint-enable prefer-arrow-callback */
  '''
  description: "require arrow functions as callbacks"
 "eslint-disable-next-line prefer-arrow-callback":
  prefix: "prefer-arrow-callback eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line prefer-arrow-callback
   $1
  '''
  description: "require arrow functions as callbacks"
 "eslint-rule/prefer-arrow-callback":
  prefix: "prefer-arrow-callback"
  body: "prefer-arrow-callback"
  description: "require arrow functions as callbacks"
 "eslint-disable prefer-const":
  prefix: "prefer-const eslint-disable"
  body: '''
   /* eslint-disable prefer-const */
   $1
   /* eslint-enable prefer-const */
  '''
  description: "require `const` declarations for variables that are never reassigned after declared"
 "eslint-disable-next-line prefer-const":
  prefix: "prefer-const eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line prefer-const
   $1
  '''
  description: "require `const` declarations for variables that are never reassigned after declared"
 "eslint-rule/prefer-const":
  prefix: "prefer-const"
  body: "prefer-const"
  description: "require `const` declarations for variables that are never reassigned after declared"
 "eslint-disable prefer-destructuring":
  prefix: "prefer-destructuring eslint-disable"
  body: '''
   /* eslint-disable prefer-destructuring */
   $1
   /* eslint-enable prefer-destructuring */
  '''
  description: "require destructuring from arrays and/or objects"
 "eslint-disable-next-line prefer-destructuring":
  prefix: "prefer-destructuring eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line prefer-destructuring
   $1
  '''
  description: "require destructuring from arrays and/or objects"
 "eslint-rule/prefer-destructuring":
  prefix: "prefer-destructuring"
  body: "prefer-destructuring"
  description: "require destructuring from arrays and/or objects"
 "eslint-disable prefer-numeric-literals":
  prefix: "prefer-numeric-literals eslint-disable"
  body: '''
   /* eslint-disable prefer-numeric-literals */
   $1
   /* eslint-enable prefer-numeric-literals */
  '''
  description: "disallow `parseInt()` in favor of binary, octal, and hexadecimal literals"
 "eslint-disable-next-line prefer-numeric-literals":
  prefix: "prefer-numeric-literals eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line prefer-numeric-literals
   $1
  '''
  description: "disallow `parseInt()` in favor of binary, octal, and hexadecimal literals"
 "eslint-rule/prefer-numeric-literals":
  prefix: "prefer-numeric-literals"
  body: "prefer-numeric-literals"
  description: "disallow `parseInt()` in favor of binary, octal, and hexadecimal literals"
 "eslint-disable prefer-promise-reject-errors":
  prefix: "prefer-promise-reject-errors eslint-disable"
  body: '''
   /* eslint-disable prefer-promise-reject-errors */
   $1
   /* eslint-enable prefer-promise-reject-errors */
  '''
  description: "require using Error objects as Promise rejection reasons"
 "eslint-disable-next-line prefer-promise-reject-errors":
  prefix: "prefer-promise-reject-errors eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line prefer-promise-reject-errors
   $1
  '''
  description: "require using Error objects as Promise rejection reasons"
 "eslint-rule/prefer-promise-reject-errors":
  prefix: "prefer-promise-reject-errors"
  body: "prefer-promise-reject-errors"
  description: "require using Error objects as Promise rejection reasons"
 "eslint-disable prefer-rest-params":
  prefix: "prefer-rest-params eslint-disable"
  body: '''
   /* eslint-disable prefer-rest-params */
   $1
   /* eslint-enable prefer-rest-params */
  '''
  description: "require rest parameters instead of `arguments`"
 "eslint-disable-next-line prefer-rest-params":
  prefix: "prefer-rest-params eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line prefer-rest-params
   $1
  '''
  description: "require rest parameters instead of `arguments`"
 "eslint-rule/prefer-rest-params":
  prefix: "prefer-rest-params"
  body: "prefer-rest-params"
  description: "require rest parameters instead of `arguments`"
 "eslint-disable prefer-spread":
  prefix: "prefer-spread eslint-disable"
  body: '''
   /* eslint-disable prefer-spread */
   $1
   /* eslint-enable prefer-spread */
  '''
  description: "require spread operators instead of `.apply()`"
 "eslint-disable-next-line prefer-spread":
  prefix: "prefer-spread eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line prefer-spread
   $1
  '''
  description: "require spread operators instead of `.apply()`"
 "eslint-rule/prefer-spread":
  prefix: "prefer-spread"
  body: "prefer-spread"
  description: "require spread operators instead of `.apply()`"
 "eslint-disable prefer-template":
  prefix: "prefer-template eslint-disable"
  body: '''
   /* eslint-disable prefer-template */
   $1
   /* eslint-enable prefer-template */
  '''
  description: "require template literals instead of string concatenation"
 "eslint-disable-next-line prefer-template":
  prefix: "prefer-template eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line prefer-template
   $1
  '''
  description: "require template literals instead of string concatenation"
 "eslint-rule/prefer-template":
  prefix: "prefer-template"
  body: "prefer-template"
  description: "require template literals instead of string concatenation"
 "eslint-disable quote-props":
  prefix: "quote-props eslint-disable"
  body: '''
   /* eslint-disable quote-props */
   $1
   /* eslint-enable quote-props */
  '''
  description: "require quotes around object literal property names"
 "eslint-disable-next-line quote-props":
  prefix: "quote-props eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line quote-props
   $1
  '''
  description: "require quotes around object literal property names"
 "eslint-rule/quote-props":
  prefix: "quote-props"
  body: "quote-props"
  description: "require quotes around object literal property names"
 "eslint-disable quotes":
  prefix: "quotes eslint-disable"
  body: '''
   /* eslint-disable quotes */
   $1
   /* eslint-enable quotes */
  '''
  description: "enforce the consistent use of either backticks, double, or single quotes"
 "eslint-disable-next-line quotes":
  prefix: "quotes eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line quotes
   $1
  '''
  description: "enforce the consistent use of either backticks, double, or single quotes"
 "eslint-rule/quotes":
  prefix: "quotes"
  body: "quotes"
  description: "enforce the consistent use of either backticks, double, or single quotes"
 "eslint-disable radix":
  prefix: "radix eslint-disable"
  body: '''
   /* eslint-disable radix */
   $1
   /* eslint-enable radix */
  '''
  description: "enforce the consistent use of the radix argument when using `parseInt()`"
 "eslint-disable-next-line radix":
  prefix: "radix eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line radix
   $1
  '''
  description: "enforce the consistent use of the radix argument when using `parseInt()`"
 "eslint-rule/radix":
  prefix: "radix"
  body: "radix"
  description: "enforce the consistent use of the radix argument when using `parseInt()`"
 "eslint-disable require-await":
  prefix: "require-await eslint-disable"
  body: '''
   /* eslint-disable require-await */
   $1
   /* eslint-enable require-await */
  '''
  description: "disallow async functions which have no `await` expression"
 "eslint-disable-next-line require-await":
  prefix: "require-await eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line require-await
   $1
  '''
  description: "disallow async functions which have no `await` expression"
 "eslint-rule/require-await":
  prefix: "require-await"
  body: "require-await"
  description: "disallow async functions which have no `await` expression"
 "eslint-disable require-jsdoc":
  prefix: "require-jsdoc eslint-disable"
  body: '''
   /* eslint-disable require-jsdoc */
   $1
   /* eslint-enable require-jsdoc */
  '''
  description: "require JSDoc comments"
 "eslint-disable-next-line require-jsdoc":
  prefix: "require-jsdoc eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line require-jsdoc
   $1
  '''
  description: "require JSDoc comments"
 "eslint-rule/require-jsdoc":
  prefix: "require-jsdoc"
  body: "require-jsdoc"
  description: "require JSDoc comments"
 "eslint-disable require-yield":
  prefix: "require-yield eslint-disable"
  body: '''
   /* eslint-disable require-yield */
   $1
   /* eslint-enable require-yield */
  '''
  description: "require generator functions to contain `yield`"
 "eslint-disable-next-line require-yield":
  prefix: "require-yield eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line require-yield
   $1
  '''
  description: "require generator functions to contain `yield`"
 "eslint-rule/require-yield":
  prefix: "require-yield"
  body: "require-yield"
  description: "require generator functions to contain `yield`"
 "eslint-disable rest-spread-spacing":
  prefix: "rest-spread-spacing eslint-disable"
  body: '''
   /* eslint-disable rest-spread-spacing */
   $1
   /* eslint-enable rest-spread-spacing */
  '''
  description: "enforce spacing between rest and spread operators and their expressions"
 "eslint-disable-next-line rest-spread-spacing":
  prefix: "rest-spread-spacing eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line rest-spread-spacing
   $1
  '''
  description: "enforce spacing between rest and spread operators and their expressions"
 "eslint-rule/rest-spread-spacing":
  prefix: "rest-spread-spacing"
  body: "rest-spread-spacing"
  description: "enforce spacing between rest and spread operators and their expressions"
 "eslint-disable semi-spacing":
  prefix: "semi-spacing eslint-disable"
  body: '''
   /* eslint-disable semi-spacing */
   $1
   /* eslint-enable semi-spacing */
  '''
  description: "enforce consistent spacing before and after semicolons"
 "eslint-disable-next-line semi-spacing":
  prefix: "semi-spacing eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line semi-spacing
   $1
  '''
  description: "enforce consistent spacing before and after semicolons"
 "eslint-rule/semi-spacing":
  prefix: "semi-spacing"
  body: "semi-spacing"
  description: "enforce consistent spacing before and after semicolons"
 "eslint-disable semi-style":
  prefix: "semi-style eslint-disable"
  body: '''
   /* eslint-disable semi-style */
   $1
   /* eslint-enable semi-style */
  '''
  description: "enforce location of semicolons"
 "eslint-disable-next-line semi-style":
  prefix: "semi-style eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line semi-style
   $1
  '''
  description: "enforce location of semicolons"
 "eslint-rule/semi-style":
  prefix: "semi-style"
  body: "semi-style"
  description: "enforce location of semicolons"
 "eslint-disable semi":
  prefix: "semi eslint-disable"
  body: '''
   /* eslint-disable semi */
   $1
   /* eslint-enable semi */
  '''
  description: "require or disallow semicolons instead of ASI"
 "eslint-disable-next-line semi":
  prefix: "semi eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line semi
   $1
  '''
  description: "require or disallow semicolons instead of ASI"
 "eslint-rule/semi":
  prefix: "semi"
  body: "semi"
  description: "require or disallow semicolons instead of ASI"
 "eslint-disable sort-imports":
  prefix: "sort-imports eslint-disable"
  body: '''
   /* eslint-disable sort-imports */
   $1
   /* eslint-enable sort-imports */
  '''
  description: "enforce sorted import declarations within modules"
 "eslint-disable-next-line sort-imports":
  prefix: "sort-imports eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line sort-imports
   $1
  '''
  description: "enforce sorted import declarations within modules"
 "eslint-rule/sort-imports":
  prefix: "sort-imports"
  body: "sort-imports"
  description: "enforce sorted import declarations within modules"
 "eslint-disable sort-keys":
  prefix: "sort-keys eslint-disable"
  body: '''
   /* eslint-disable sort-keys */
   $1
   /* eslint-enable sort-keys */
  '''
  description: "require object keys to be sorted"
 "eslint-disable-next-line sort-keys":
  prefix: "sort-keys eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line sort-keys
   $1
  '''
  description: "require object keys to be sorted"
 "eslint-rule/sort-keys":
  prefix: "sort-keys"
  body: "sort-keys"
  description: "require object keys to be sorted"
 "eslint-disable sort-vars":
  prefix: "sort-vars eslint-disable"
  body: '''
   /* eslint-disable sort-vars */
   $1
   /* eslint-enable sort-vars */
  '''
  description: "require variables within the same declaration block to be sorted"
 "eslint-disable-next-line sort-vars":
  prefix: "sort-vars eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line sort-vars
   $1
  '''
  description: "require variables within the same declaration block to be sorted"
 "eslint-rule/sort-vars":
  prefix: "sort-vars"
  body: "sort-vars"
  description: "require variables within the same declaration block to be sorted"
 "eslint-disable space-before-blocks":
  prefix: "space-before-blocks eslint-disable"
  body: '''
   /* eslint-disable space-before-blocks */
   $1
   /* eslint-enable space-before-blocks */
  '''
  description: "enforce consistent spacing before blocks"
 "eslint-disable-next-line space-before-blocks":
  prefix: "space-before-blocks eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line space-before-blocks
   $1
  '''
  description: "enforce consistent spacing before blocks"
 "eslint-rule/space-before-blocks":
  prefix: "space-before-blocks"
  body: "space-before-blocks"
  description: "enforce consistent spacing before blocks"
 "eslint-disable space-before-function-paren":
  prefix: "space-before-function-paren eslint-disable"
  body: '''
   /* eslint-disable space-before-function-paren */
   $1
   /* eslint-enable space-before-function-paren */
  '''
  description: "enforce consistent spacing before `function` definition opening parenthesis"
 "eslint-disable-next-line space-before-function-paren":
  prefix: "space-before-function-paren eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line space-before-function-paren
   $1
  '''
  description: "enforce consistent spacing before `function` definition opening parenthesis"
 "eslint-rule/space-before-function-paren":
  prefix: "space-before-function-paren"
  body: "space-before-function-paren"
  description: "enforce consistent spacing before `function` definition opening parenthesis"
 "eslint-disable space-in-parens":
  prefix: "space-in-parens eslint-disable"
  body: '''
   /* eslint-disable space-in-parens */
   $1
   /* eslint-enable space-in-parens */
  '''
  description: "enforce consistent spacing inside parentheses"
 "eslint-disable-next-line space-in-parens":
  prefix: "space-in-parens eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line space-in-parens
   $1
  '''
  description: "enforce consistent spacing inside parentheses"
 "eslint-rule/space-in-parens":
  prefix: "space-in-parens"
  body: "space-in-parens"
  description: "enforce consistent spacing inside parentheses"
 "eslint-disable space-infix-ops":
  prefix: "space-infix-ops eslint-disable"
  body: '''
   /* eslint-disable space-infix-ops */
   $1
   /* eslint-enable space-infix-ops */
  '''
  description: "require spacing around infix operators"
 "eslint-disable-next-line space-infix-ops":
  prefix: "space-infix-ops eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line space-infix-ops
   $1
  '''
  description: "require spacing around infix operators"
 "eslint-rule/space-infix-ops":
  prefix: "space-infix-ops"
  body: "space-infix-ops"
  description: "require spacing around infix operators"
 "eslint-disable space-unary-ops":
  prefix: "space-unary-ops eslint-disable"
  body: '''
   /* eslint-disable space-unary-ops */
   $1
   /* eslint-enable space-unary-ops */
  '''
  description: "enforce consistent spacing before or after unary operators"
 "eslint-disable-next-line space-unary-ops":
  prefix: "space-unary-ops eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line space-unary-ops
   $1
  '''
  description: "enforce consistent spacing before or after unary operators"
 "eslint-rule/space-unary-ops":
  prefix: "space-unary-ops"
  body: "space-unary-ops"
  description: "enforce consistent spacing before or after unary operators"
 "eslint-disable spaced-comment":
  prefix: "spaced-comment eslint-disable"
  body: '''
   /* eslint-disable spaced-comment */
   $1
   /* eslint-enable spaced-comment */
  '''
  description: "enforce consistent spacing after the `//` or `/*` in a comment"
 "eslint-disable-next-line spaced-comment":
  prefix: "spaced-comment eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line spaced-comment
   $1
  '''
  description: "enforce consistent spacing after the `//` or `/*` in a comment"
 "eslint-rule/spaced-comment":
  prefix: "spaced-comment"
  body: "spaced-comment"
  description: "enforce consistent spacing after the `//` or `/*` in a comment"
 "eslint-disable strict":
  prefix: "strict eslint-disable"
  body: '''
   /* eslint-disable strict */
   $1
   /* eslint-enable strict */
  '''
  description: "require or disallow strict mode directives"
 "eslint-disable-next-line strict":
  prefix: "strict eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line strict
   $1
  '''
  description: "require or disallow strict mode directives"
 "eslint-rule/strict":
  prefix: "strict"
  body: "strict"
  description: "require or disallow strict mode directives"
 "eslint-disable switch-colon-spacing":
  prefix: "switch-colon-spacing eslint-disable"
  body: '''
   /* eslint-disable switch-colon-spacing */
   $1
   /* eslint-enable switch-colon-spacing */
  '''
  description: "enforce spacing around colons of switch statements"
 "eslint-disable-next-line switch-colon-spacing":
  prefix: "switch-colon-spacing eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line switch-colon-spacing
   $1
  '''
  description: "enforce spacing around colons of switch statements"
 "eslint-rule/switch-colon-spacing":
  prefix: "switch-colon-spacing"
  body: "switch-colon-spacing"
  description: "enforce spacing around colons of switch statements"
 "eslint-disable symbol-description":
  prefix: "symbol-description eslint-disable"
  body: '''
   /* eslint-disable symbol-description */
   $1
   /* eslint-enable symbol-description */
  '''
  description: "require symbol descriptions"
 "eslint-disable-next-line symbol-description":
  prefix: "symbol-description eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line symbol-description
   $1
  '''
  description: "require symbol descriptions"
 "eslint-rule/symbol-description":
  prefix: "symbol-description"
  body: "symbol-description"
  description: "require symbol descriptions"
 "eslint-disable template-curly-spacing":
  prefix: "template-curly-spacing eslint-disable"
  body: '''
   /* eslint-disable template-curly-spacing */
   $1
   /* eslint-enable template-curly-spacing */
  '''
  description: "require or disallow spacing around embedded expressions of template strings"
 "eslint-disable-next-line template-curly-spacing":
  prefix: "template-curly-spacing eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line template-curly-spacing
   $1
  '''
  description: "require or disallow spacing around embedded expressions of template strings"
 "eslint-rule/template-curly-spacing":
  prefix: "template-curly-spacing"
  body: "template-curly-spacing"
  description: "require or disallow spacing around embedded expressions of template strings"
 "eslint-disable template-tag-spacing":
  prefix: "template-tag-spacing eslint-disable"
  body: '''
   /* eslint-disable template-tag-spacing */
   $1
   /* eslint-enable template-tag-spacing */
  '''
  description: "require or disallow spacing between template tags and their literals"
 "eslint-disable-next-line template-tag-spacing":
  prefix: "template-tag-spacing eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line template-tag-spacing
   $1
  '''
  description: "require or disallow spacing between template tags and their literals"
 "eslint-rule/template-tag-spacing":
  prefix: "template-tag-spacing"
  body: "template-tag-spacing"
  description: "require or disallow spacing between template tags and their literals"
 "eslint-disable unicode-bom":
  prefix: "unicode-bom eslint-disable"
  body: '''
   /* eslint-disable unicode-bom */
   $1
   /* eslint-enable unicode-bom */
  '''
  description: "require or disallow Unicode byte order mark (BOM)"
 "eslint-disable-next-line unicode-bom":
  prefix: "unicode-bom eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line unicode-bom
   $1
  '''
  description: "require or disallow Unicode byte order mark (BOM)"
 "eslint-rule/unicode-bom":
  prefix: "unicode-bom"
  body: "unicode-bom"
  description: "require or disallow Unicode byte order mark (BOM)"
 "eslint-disable use-isnan":
  prefix: "use-isnan eslint-disable"
  body: '''
   /* eslint-disable use-isnan */
   $1
   /* eslint-enable use-isnan */
  '''
  description: "require calls to `isNaN()` when checking for `NaN`"
 "eslint-disable-next-line use-isnan":
  prefix: "use-isnan eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line use-isnan
   $1
  '''
  description: "require calls to `isNaN()` when checking for `NaN`"
 "eslint-rule/use-isnan":
  prefix: "use-isnan"
  body: "use-isnan"
  description: "require calls to `isNaN()` when checking for `NaN`"
 "eslint-disable valid-jsdoc":
  prefix: "valid-jsdoc eslint-disable"
  body: '''
   /* eslint-disable valid-jsdoc */
   $1
   /* eslint-enable valid-jsdoc */
  '''
  description: "enforce valid JSDoc comments"
 "eslint-disable-next-line valid-jsdoc":
  prefix: "valid-jsdoc eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line valid-jsdoc
   $1
  '''
  description: "enforce valid JSDoc comments"
 "eslint-rule/valid-jsdoc":
  prefix: "valid-jsdoc"
  body: "valid-jsdoc"
  description: "enforce valid JSDoc comments"
 "eslint-disable valid-typeof":
  prefix: "valid-typeof eslint-disable"
  body: '''
   /* eslint-disable valid-typeof */
   $1
   /* eslint-enable valid-typeof */
  '''
  description: "enforce comparing `typeof` expressions against valid strings"
 "eslint-disable-next-line valid-typeof":
  prefix: "valid-typeof eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line valid-typeof
   $1
  '''
  description: "enforce comparing `typeof` expressions against valid strings"
 "eslint-rule/valid-typeof":
  prefix: "valid-typeof"
  body: "valid-typeof"
  description: "enforce comparing `typeof` expressions against valid strings"
 "eslint-disable vars-on-top":
  prefix: "vars-on-top eslint-disable"
  body: '''
   /* eslint-disable vars-on-top */
   $1
   /* eslint-enable vars-on-top */
  '''
  description: "require `var` declarations be placed at the top of their containing scope"
 "eslint-disable-next-line vars-on-top":
  prefix: "vars-on-top eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line vars-on-top
   $1
  '''
  description: "require `var` declarations be placed at the top of their containing scope"
 "eslint-rule/vars-on-top":
  prefix: "vars-on-top"
  body: "vars-on-top"
  description: "require `var` declarations be placed at the top of their containing scope"
 "eslint-disable wrap-iife":
  prefix: "wrap-iife eslint-disable"
  body: '''
   /* eslint-disable wrap-iife */
   $1
   /* eslint-enable wrap-iife */
  '''
  description: "require parentheses around immediate `function` invocations"
 "eslint-disable-next-line wrap-iife":
  prefix: "wrap-iife eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line wrap-iife
   $1
  '''
  description: "require parentheses around immediate `function` invocations"
 "eslint-rule/wrap-iife":
  prefix: "wrap-iife"
  body: "wrap-iife"
  description: "require parentheses around immediate `function` invocations"
 "eslint-disable wrap-regex":
  prefix: "wrap-regex eslint-disable"
  body: '''
   /* eslint-disable wrap-regex */
   $1
   /* eslint-enable wrap-regex */
  '''
  description: "require parenthesis around regex literals"
 "eslint-disable-next-line wrap-regex":
  prefix: "wrap-regex eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line wrap-regex
   $1
  '''
  description: "require parenthesis around regex literals"
 "eslint-rule/wrap-regex":
  prefix: "wrap-regex"
  body: "wrap-regex"
  description: "require parenthesis around regex literals"
 "eslint-disable yield-star-spacing":
  prefix: "yield-star-spacing eslint-disable"
  body: '''
   /* eslint-disable yield-star-spacing */
   $1
   /* eslint-enable yield-star-spacing */
  '''
  description: "require or disallow spacing around the `*` in `yield*` expressions"
 "eslint-disable-next-line yield-star-spacing":
  prefix: "yield-star-spacing eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line yield-star-spacing
   $1
  '''
  description: "require or disallow spacing around the `*` in `yield*` expressions"
 "eslint-rule/yield-star-spacing":
  prefix: "yield-star-spacing"
  body: "yield-star-spacing"
  description: "require or disallow spacing around the `*` in `yield*` expressions"
 "eslint-disable yoda":
  prefix: "yoda eslint-disable"
  body: '''
   /* eslint-disable yoda */
   $1
   /* eslint-enable yoda */
  '''
  description: "require or disallow \"Yoda\" conditions"
 "eslint-disable-next-line yoda":
  prefix: "yoda eslint-disable-next-line"
  body: '''
   // eslint-disable-next-line yoda
   $1
  '''
  description: "require or disallow \"Yoda\" conditions"
 "eslint-rule/yoda":
  prefix: "yoda"
  body: "yoda"
  description: "require or disallow \"Yoda\" conditions"
 "eslint-disable":
  prefix: "eslint-disable"
  body: '''
   /* eslint-disable $1 */
   $2
   /* eslint-enable $1 */
  '''
 "eslint-disable-next-line":
  prefix: "eslint-disable-next-line"
  body: "// eslint-disable-next-line $1"
".source.json":
 "eslint-rule/accessor-pairs":
  prefix: "accessor-pairs"
  body: "accessor-pairs"
  description: "enforce getter and setter pairs in objects"
 "eslint-rule/array-bracket-newline":
  prefix: "array-bracket-newline"
  body: "array-bracket-newline"
  description: "enforce linebreaks after opening and before closing array brackets"
 "eslint-rule/array-bracket-spacing":
  prefix: "array-bracket-spacing"
  body: "array-bracket-spacing"
  description: "enforce consistent spacing inside array brackets"
 "eslint-rule/array-callback-return":
  prefix: "array-callback-return"
  body: "array-callback-return"
  description: "enforce `return` statements in callbacks of array methods"
 "eslint-rule/array-element-newline":
  prefix: "array-element-newline"
  body: "array-element-newline"
  description: "enforce line breaks after each array element"
 "eslint-rule/arrow-body-style":
  prefix: "arrow-body-style"
  body: "arrow-body-style"
  description: "require braces around arrow function bodies"
 "eslint-rule/arrow-parens":
  prefix: "arrow-parens"
  body: "arrow-parens"
  description: "require parentheses around arrow function arguments"
 "eslint-rule/arrow-spacing":
  prefix: "arrow-spacing"
  body: "arrow-spacing"
  description: "enforce consistent spacing before and after the arrow in arrow functions"
 "eslint-rule/block-scoped-var":
  prefix: "block-scoped-var"
  body: "block-scoped-var"
  description: "enforce the use of variables within the scope they are defined"
 "eslint-rule/block-spacing":
  prefix: "block-spacing"
  body: "block-spacing"
  description: "enforce consistent spacing inside single-line blocks"
 "eslint-rule/brace-style":
  prefix: "brace-style"
  body: "brace-style"
  description: "enforce consistent brace style for blocks"
 "eslint-rule/callback-return":
  prefix: "callback-return"
  body: "callback-return"
  description: "require `return` statements after callbacks"
 "eslint-rule/camelcase":
  prefix: "camelcase"
  body: "camelcase"
  description: "enforce camelcase naming convention"
 "eslint-rule/capitalized-comments":
  prefix: "capitalized-comments"
  body: "capitalized-comments"
  description: "enforce or disallow capitalization of the first letter of a comment"
 "eslint-rule/class-methods-use-this":
  prefix: "class-methods-use-this"
  body: "class-methods-use-this"
  description: "enforce that class methods utilize `this`"
 "eslint-rule/comma-dangle":
  prefix: "comma-dangle"
  body: "comma-dangle"
  description: "require or disallow trailing commas"
 "eslint-rule/comma-spacing":
  prefix: "comma-spacing"
  body: "comma-spacing"
  description: "enforce consistent spacing before and after commas"
 "eslint-rule/comma-style":
  prefix: "comma-style"
  body: "comma-style"
  description: "enforce consistent comma style"
 "eslint-rule/complexity":
  prefix: "complexity"
  body: "complexity"
  description: "enforce a maximum cyclomatic complexity allowed in a program"
 "eslint-rule/computed-property-spacing":
  prefix: "computed-property-spacing"
  body: "computed-property-spacing"
  description: "enforce consistent spacing inside computed property brackets"
 "eslint-rule/consistent-return":
  prefix: "consistent-return"
  body: "consistent-return"
  description: "require `return` statements to either always or never specify values"
 "eslint-rule/consistent-this":
  prefix: "consistent-this"
  body: "consistent-this"
  description: "enforce consistent naming when capturing the current execution context"
 "eslint-rule/constructor-super":
  prefix: "constructor-super"
  body: "constructor-super"
  description: "require `super()` calls in constructors"
 "eslint-rule/curly":
  prefix: "curly"
  body: "curly"
  description: "enforce consistent brace style for all control statements"
 "eslint-rule/default-case":
  prefix: "default-case"
  body: "default-case"
  description: "require `default` cases in `switch` statements"
 "eslint-rule/dot-location":
  prefix: "dot-location"
  body: "dot-location"
  description: "enforce consistent newlines before and after dots"
 "eslint-rule/dot-notation":
  prefix: "dot-notation"
  body: "dot-notation"
  description: "enforce dot notation whenever possible"
 "eslint-rule/eol-last":
  prefix: "eol-last"
  body: "eol-last"
  description: "require or disallow newline at the end of files"
 "eslint-rule/eqeqeq":
  prefix: "eqeqeq"
  body: "eqeqeq"
  description: "require the use of `===` and `!==`"
 "eslint-rule/for-direction":
  prefix: "for-direction"
  body: "for-direction"
  description: "enforce \"for\" loop update clause moving the counter in the right direction."
 "eslint-rule/func-call-spacing":
  prefix: "func-call-spacing"
  body: "func-call-spacing"
  description: "require or disallow spacing between function identifiers and their invocations"
 "eslint-rule/func-name-matching":
  prefix: "func-name-matching"
  body: "func-name-matching"
  description: "require function names to match the name of the variable or property to which they are assigned"
 "eslint-rule/func-names":
  prefix: "func-names"
  body: "func-names"
  description: "require or disallow named `function` expressions"
 "eslint-rule/func-style":
  prefix: "func-style"
  body: "func-style"
  description: "enforce the consistent use of either `function` declarations or expressions"
 "eslint-rule/generator-star-spacing":
  prefix: "generator-star-spacing"
  body: "generator-star-spacing"
  description: "enforce consistent spacing around `*` operators in generator functions"
 "eslint-rule/global-require":
  prefix: "global-require"
  body: "global-require"
  description: "require `require()` calls to be placed at top-level module scope"
 "eslint-rule/guard-for-in":
  prefix: "guard-for-in"
  body: "guard-for-in"
  description: "require `for-in` loops to include an `if` statement"
 "eslint-rule/handle-callback-err":
  prefix: "handle-callback-err"
  body: "handle-callback-err"
  description: "require error handling in callbacks"
 "eslint-rule/id-blacklist":
  prefix: "id-blacklist"
  body: "id-blacklist"
  description: "disallow specified identifiers"
 "eslint-rule/id-length":
  prefix: "id-length"
  body: "id-length"
  description: "enforce minimum and maximum identifier lengths"
 "eslint-rule/id-match":
  prefix: "id-match"
  body: "id-match"
  description: "require identifiers to match a specified regular expression"
 "eslint-rule/indent":
  prefix: "indent"
  body: "indent"
  description: "enforce consistent indentation"
 "eslint-rule/init-declarations":
  prefix: "init-declarations"
  body: "init-declarations"
  description: "require or disallow initialization in variable declarations"
 "eslint-rule/jsx-quotes":
  prefix: "jsx-quotes"
  body: "jsx-quotes"
  description: "enforce the consistent use of either double or single quotes in JSX attributes"
 "eslint-rule/key-spacing":
  prefix: "key-spacing"
  body: "key-spacing"
  description: "enforce consistent spacing between keys and values in object literal properties"
 "eslint-rule/keyword-spacing":
  prefix: "keyword-spacing"
  body: "keyword-spacing"
  description: "enforce consistent spacing before and after keywords"
 "eslint-rule/line-comment-position":
  prefix: "line-comment-position"
  body: "line-comment-position"
  description: "enforce position of line comments"
 "eslint-rule/linebreak-style":
  prefix: "linebreak-style"
  body: "linebreak-style"
  description: "enforce consistent linebreak style"
 "eslint-rule/lines-around-comment":
  prefix: "lines-around-comment"
  body: "lines-around-comment"
  description: "require empty lines around comments"
 "eslint-rule/max-depth":
  prefix: "max-depth"
  body: "max-depth"
  description: "enforce a maximum depth that blocks can be nested"
 "eslint-rule/max-len":
  prefix: "max-len"
  body: "max-len"
  description: "enforce a maximum line length"
 "eslint-rule/max-lines":
  prefix: "max-lines"
  body: "max-lines"
  description: "enforce a maximum number of lines per file"
 "eslint-rule/max-nested-callbacks":
  prefix: "max-nested-callbacks"
  body: "max-nested-callbacks"
  description: "enforce a maximum depth that callbacks can be nested"
 "eslint-rule/max-params":
  prefix: "max-params"
  body: "max-params"
  description: "enforce a maximum number of parameters in function definitions"
 "eslint-rule/max-statements-per-line":
  prefix: "max-statements-per-line"
  body: "max-statements-per-line"
  description: "enforce a maximum number of statements allowed per line"
 "eslint-rule/max-statements":
  prefix: "max-statements"
  body: "max-statements"
  description: "enforce a maximum number of statements allowed in function blocks"
 "eslint-rule/multiline-ternary":
  prefix: "multiline-ternary"
  body: "multiline-ternary"
  description: "enforce newlines between operands of ternary expressions"
 "eslint-rule/new-cap":
  prefix: "new-cap"
  body: "new-cap"
  description: "require constructor names to begin with a capital letter"
 "eslint-rule/new-parens":
  prefix: "new-parens"
  body: "new-parens"
  description: "require parentheses when invoking a constructor with no arguments"
 "eslint-rule/newline-per-chained-call":
  prefix: "newline-per-chained-call"
  body: "newline-per-chained-call"
  description: "require a newline after each call in a method chain"
 "eslint-rule/no-alert":
  prefix: "no-alert"
  body: "no-alert"
  description: "disallow the use of `alert`, `confirm`, and `prompt`"
 "eslint-rule/no-array-constructor":
  prefix: "no-array-constructor"
  body: "no-array-constructor"
  description: "disallow `Array` constructors"
 "eslint-rule/no-await-in-loop":
  prefix: "no-await-in-loop"
  body: "no-await-in-loop"
  description: "disallow `await` inside of loops"
 "eslint-rule/no-bitwise":
  prefix: "no-bitwise"
  body: "no-bitwise"
  description: "disallow bitwise operators"
 "eslint-rule/no-buffer-constructor":
  prefix: "no-buffer-constructor"
  body: "no-buffer-constructor"
  description: "disallow use of the Buffer() constructor"
 "eslint-rule/no-caller":
  prefix: "no-caller"
  body: "no-caller"
  description: "disallow the use of `arguments.caller` or `arguments.callee`"
 "eslint-rule/no-case-declarations":
  prefix: "no-case-declarations"
  body: "no-case-declarations"
  description: "disallow lexical declarations in case clauses"
 "eslint-rule/no-catch-shadow":
  prefix: "no-catch-shadow"
  body: "no-catch-shadow"
  description: "disallow `catch` clause parameters from shadowing variables in the outer scope"
 "eslint-rule/no-class-assign":
  prefix: "no-class-assign"
  body: "no-class-assign"
  description: "disallow reassigning class members"
 "eslint-rule/no-compare-neg-zero":
  prefix: "no-compare-neg-zero"
  body: "no-compare-neg-zero"
  description: "disallow comparing against -0"
 "eslint-rule/no-cond-assign":
  prefix: "no-cond-assign"
  body: "no-cond-assign"
  description: "disallow assignment operators in conditional expressions"
 "eslint-rule/no-confusing-arrow":
  prefix: "no-confusing-arrow"
  body: "no-confusing-arrow"
  description: "disallow arrow functions where they could be confused with comparisons"
 "eslint-rule/no-console":
  prefix: "no-console"
  body: "no-console"
  description: "disallow the use of `console`"
 "eslint-rule/no-const-assign":
  prefix: "no-const-assign"
  body: "no-const-assign"
  description: "disallow reassigning `const` variables"
 "eslint-rule/no-constant-condition":
  prefix: "no-constant-condition"
  body: "no-constant-condition"
  description: "disallow constant expressions in conditions"
 "eslint-rule/no-continue":
  prefix: "no-continue"
  body: "no-continue"
  description: "disallow `continue` statements"
 "eslint-rule/no-control-regex":
  prefix: "no-control-regex"
  body: "no-control-regex"
  description: "disallow control characters in regular expressions"
 "eslint-rule/no-debugger":
  prefix: "no-debugger"
  body: "no-debugger"
  description: "disallow the use of `debugger`"
 "eslint-rule/no-delete-var":
  prefix: "no-delete-var"
  body: "no-delete-var"
  description: "disallow deleting variables"
 "eslint-rule/no-div-regex":
  prefix: "no-div-regex"
  body: "no-div-regex"
  description: "disallow division operators explicitly at the beginning of regular expressions"
 "eslint-rule/no-dupe-args":
  prefix: "no-dupe-args"
  body: "no-dupe-args"
  description: "disallow duplicate arguments in `function` definitions"
 "eslint-rule/no-dupe-class-members":
  prefix: "no-dupe-class-members"
  body: "no-dupe-class-members"
  description: "disallow duplicate class members"
 "eslint-rule/no-dupe-keys":
  prefix: "no-dupe-keys"
  body: "no-dupe-keys"
  description: "disallow duplicate keys in object literals"
 "eslint-rule/no-duplicate-case":
  prefix: "no-duplicate-case"
  body: "no-duplicate-case"
  description: "disallow duplicate case labels"
 "eslint-rule/no-duplicate-imports":
  prefix: "no-duplicate-imports"
  body: "no-duplicate-imports"
  description: "disallow duplicate module imports"
 "eslint-rule/no-else-return":
  prefix: "no-else-return"
  body: "no-else-return"
  description: "disallow `else` blocks after `return` statements in `if` statements"
 "eslint-rule/no-empty-character-class":
  prefix: "no-empty-character-class"
  body: "no-empty-character-class"
  description: "disallow empty character classes in regular expressions"
 "eslint-rule/no-empty-function":
  prefix: "no-empty-function"
  body: "no-empty-function"
  description: "disallow empty functions"
 "eslint-rule/no-empty-pattern":
  prefix: "no-empty-pattern"
  body: "no-empty-pattern"
  description: "disallow empty destructuring patterns"
 "eslint-rule/no-empty":
  prefix: "no-empty"
  body: "no-empty"
  description: "disallow empty block statements"
 "eslint-rule/no-eq-null":
  prefix: "no-eq-null"
  body: "no-eq-null"
  description: "disallow `null` comparisons without type-checking operators"
 "eslint-rule/no-eval":
  prefix: "no-eval"
  body: "no-eval"
  description: "disallow the use of `eval()`"
 "eslint-rule/no-ex-assign":
  prefix: "no-ex-assign"
  body: "no-ex-assign"
  description: "disallow reassigning exceptions in `catch` clauses"
 "eslint-rule/no-extend-native":
  prefix: "no-extend-native"
  body: "no-extend-native"
  description: "disallow extending native types"
 "eslint-rule/no-extra-bind":
  prefix: "no-extra-bind"
  body: "no-extra-bind"
  description: "disallow unnecessary calls to `.bind()`"
 "eslint-rule/no-extra-boolean-cast":
  prefix: "no-extra-boolean-cast"
  body: "no-extra-boolean-cast"
  description: "disallow unnecessary boolean casts"
 "eslint-rule/no-extra-label":
  prefix: "no-extra-label"
  body: "no-extra-label"
  description: "disallow unnecessary labels"
 "eslint-rule/no-extra-parens":
  prefix: "no-extra-parens"
  body: "no-extra-parens"
  description: "disallow unnecessary parentheses"
 "eslint-rule/no-extra-semi":
  prefix: "no-extra-semi"
  body: "no-extra-semi"
  description: "disallow unnecessary semicolons"
 "eslint-rule/no-fallthrough":
  prefix: "no-fallthrough"
  body: "no-fallthrough"
  description: "disallow fallthrough of `case` statements"
 "eslint-rule/no-floating-decimal":
  prefix: "no-floating-decimal"
  body: "no-floating-decimal"
  description: "disallow leading or trailing decimal points in numeric literals"
 "eslint-rule/no-func-assign":
  prefix: "no-func-assign"
  body: "no-func-assign"
  description: "disallow reassigning `function` declarations"
 "eslint-rule/no-global-assign":
  prefix: "no-global-assign"
  body: "no-global-assign"
  description: "disallow assignments to native objects or read-only global variables"
 "eslint-rule/no-implicit-coercion":
  prefix: "no-implicit-coercion"
  body: "no-implicit-coercion"
  description: "disallow shorthand type conversions"
 "eslint-rule/no-implicit-globals":
  prefix: "no-implicit-globals"
  body: "no-implicit-globals"
  description: "disallow variable and `function` declarations in the global scope"
 "eslint-rule/no-implied-eval":
  prefix: "no-implied-eval"
  body: "no-implied-eval"
  description: "disallow the use of `eval()`-like methods"
 "eslint-rule/no-inline-comments":
  prefix: "no-inline-comments"
  body: "no-inline-comments"
  description: "disallow inline comments after code"
 "eslint-rule/no-inner-declarations":
  prefix: "no-inner-declarations"
  body: "no-inner-declarations"
  description: "disallow variable or `function` declarations in nested blocks"
 "eslint-rule/no-invalid-regexp":
  prefix: "no-invalid-regexp"
  body: "no-invalid-regexp"
  description: "disallow invalid regular expression strings in `RegExp` constructors"
 "eslint-rule/no-invalid-this":
  prefix: "no-invalid-this"
  body: "no-invalid-this"
  description: "disallow `this` keywords outside of classes or class-like objects"
 "eslint-rule/no-irregular-whitespace":
  prefix: "no-irregular-whitespace"
  body: "no-irregular-whitespace"
  description: "disallow irregular whitespace outside of strings and comments"
 "eslint-rule/no-iterator":
  prefix: "no-iterator"
  body: "no-iterator"
  description: "disallow the use of the `__iterator__` property"
 "eslint-rule/no-label-var":
  prefix: "no-label-var"
  body: "no-label-var"
  description: "disallow labels that share a name with a variable"
 "eslint-rule/no-labels":
  prefix: "no-labels"
  body: "no-labels"
  description: "disallow labeled statements"
 "eslint-rule/no-lone-blocks":
  prefix: "no-lone-blocks"
  body: "no-lone-blocks"
  description: "disallow unnecessary nested blocks"
 "eslint-rule/no-lonely-if":
  prefix: "no-lonely-if"
  body: "no-lonely-if"
  description: "disallow `if` statements as the only statement in `else` blocks"
 "eslint-rule/no-loop-func":
  prefix: "no-loop-func"
  body: "no-loop-func"
  description: "disallow `function` declarations and expressions inside loop statements"
 "eslint-rule/no-magic-numbers":
  prefix: "no-magic-numbers"
  body: "no-magic-numbers"
  description: "disallow magic numbers"
 "eslint-rule/no-mixed-operators":
  prefix: "no-mixed-operators"
  body: "no-mixed-operators"
  description: "disallow mixed binary operators"
 "eslint-rule/no-mixed-requires":
  prefix: "no-mixed-requires"
  body: "no-mixed-requires"
  description: "disallow `require` calls to be mixed with regular variable declarations"
 "eslint-rule/no-mixed-spaces-and-tabs":
  prefix: "no-mixed-spaces-and-tabs"
  body: "no-mixed-spaces-and-tabs"
  description: "disallow mixed spaces and tabs for indentation"
 "eslint-rule/no-multi-assign":
  prefix: "no-multi-assign"
  body: "no-multi-assign"
  description: "disallow use of chained assignment expressions"
 "eslint-rule/no-multi-spaces":
  prefix: "no-multi-spaces"
  body: "no-multi-spaces"
  description: "disallow multiple spaces"
 "eslint-rule/no-multi-str":
  prefix: "no-multi-str"
  body: "no-multi-str"
  description: "disallow multiline strings"
 "eslint-rule/no-multiple-empty-lines":
  prefix: "no-multiple-empty-lines"
  body: "no-multiple-empty-lines"
  description: "disallow multiple empty lines"
 "eslint-rule/no-negated-condition":
  prefix: "no-negated-condition"
  body: "no-negated-condition"
  description: "disallow negated conditions"
 "eslint-rule/no-nested-ternary":
  prefix: "no-nested-ternary"
  body: "no-nested-ternary"
  description: "disallow nested ternary expressions"
 "eslint-rule/no-new-func":
  prefix: "no-new-func"
  body: "no-new-func"
  description: "disallow `new` operators with the `Function` object"
 "eslint-rule/no-new-object":
  prefix: "no-new-object"
  body: "no-new-object"
  description: "disallow `Object` constructors"
 "eslint-rule/no-new-require":
  prefix: "no-new-require"
  body: "no-new-require"
  description: "disallow `new` operators with calls to `require`"
 "eslint-rule/no-new-symbol":
  prefix: "no-new-symbol"
  body: "no-new-symbol"
  description: "disallow `new` operators with the `Symbol` object"
 "eslint-rule/no-new-wrappers":
  prefix: "no-new-wrappers"
  body: "no-new-wrappers"
  description: "disallow `new` operators with the `String`, `Number`, and `Boolean` objects"
 "eslint-rule/no-new":
  prefix: "no-new"
  body: "no-new"
  description: "disallow `new` operators outside of assignments or comparisons"
 "eslint-rule/no-obj-calls":
  prefix: "no-obj-calls"
  body: "no-obj-calls"
  description: "disallow calling global object properties as functions"
 "eslint-rule/no-octal-escape":
  prefix: "no-octal-escape"
  body: "no-octal-escape"
  description: "disallow octal escape sequences in string literals"
 "eslint-rule/no-octal":
  prefix: "no-octal"
  body: "no-octal"
  description: "disallow octal literals"
 "eslint-rule/no-param-reassign":
  prefix: "no-param-reassign"
  body: "no-param-reassign"
  description: "disallow reassigning `function` parameters"
 "eslint-rule/no-path-concat":
  prefix: "no-path-concat"
  body: "no-path-concat"
  description: "disallow string concatenation with `__dirname` and `__filename`"
 "eslint-rule/no-plusplus":
  prefix: "no-plusplus"
  body: "no-plusplus"
  description: "disallow the unary operators `++` and `--`"
 "eslint-rule/no-process-env":
  prefix: "no-process-env"
  body: "no-process-env"
  description: "disallow the use of `process.env`"
 "eslint-rule/no-process-exit":
  prefix: "no-process-exit"
  body: "no-process-exit"
  description: "disallow the use of `process.exit()`"
 "eslint-rule/no-proto":
  prefix: "no-proto"
  body: "no-proto"
  description: "disallow the use of the `__proto__` property"
 "eslint-rule/no-prototype-builtins":
  prefix: "no-prototype-builtins"
  body: "no-prototype-builtins"
  description: "disallow calling some `Object.prototype` methods directly on objects"
 "eslint-rule/no-redeclare":
  prefix: "no-redeclare"
  body: "no-redeclare"
  description: "disallow variable redeclaration"
 "eslint-rule/no-regex-spaces":
  prefix: "no-regex-spaces"
  body: "no-regex-spaces"
  description: "disallow multiple spaces in regular expressions"
 "eslint-rule/no-restricted-globals":
  prefix: "no-restricted-globals"
  body: "no-restricted-globals"
  description: "disallow specified global variables"
 "eslint-rule/no-restricted-imports":
  prefix: "no-restricted-imports"
  body: "no-restricted-imports"
  description: "disallow specified modules when loaded by `import`"
 "eslint-rule/no-restricted-modules":
  prefix: "no-restricted-modules"
  body: "no-restricted-modules"
  description: "disallow specified modules when loaded by `require`"
 "eslint-rule/no-restricted-properties":
  prefix: "no-restricted-properties"
  body: "no-restricted-properties"
  description: "disallow certain properties on certain objects"
 "eslint-rule/no-restricted-syntax":
  prefix: "no-restricted-syntax"
  body: "no-restricted-syntax"
  description: "disallow specified syntax"
 "eslint-rule/no-return-assign":
  prefix: "no-return-assign"
  body: "no-return-assign"
  description: "disallow assignment operators in `return` statements"
 "eslint-rule/no-return-await":
  prefix: "no-return-await"
  body: "no-return-await"
  description: "disallow unnecessary `return await`"
 "eslint-rule/no-script-url":
  prefix: "no-script-url"
  body: "no-script-url"
  description: "disallow `javascript:` urls"
 "eslint-rule/no-self-assign":
  prefix: "no-self-assign"
  body: "no-self-assign"
  description: "disallow assignments where both sides are exactly the same"
 "eslint-rule/no-self-compare":
  prefix: "no-self-compare"
  body: "no-self-compare"
  description: "disallow comparisons where both sides are exactly the same"
 "eslint-rule/no-sequences":
  prefix: "no-sequences"
  body: "no-sequences"
  description: "disallow comma operators"
 "eslint-rule/no-shadow-restricted-names":
  prefix: "no-shadow-restricted-names"
  body: "no-shadow-restricted-names"
  description: "disallow identifiers from shadowing restricted names"
 "eslint-rule/no-shadow":
  prefix: "no-shadow"
  body: "no-shadow"
  description: "disallow variable declarations from shadowing variables declared in the outer scope"
 "eslint-rule/no-sparse-arrays":
  prefix: "no-sparse-arrays"
  body: "no-sparse-arrays"
  description: "disallow sparse arrays"
 "eslint-rule/no-sync":
  prefix: "no-sync"
  body: "no-sync"
  description: "disallow synchronous methods"
 "eslint-rule/no-tabs":
  prefix: "no-tabs"
  body: "no-tabs"
  description: "disallow all tabs"
 "eslint-rule/no-template-curly-in-string":
  prefix: "no-template-curly-in-string"
  body: "no-template-curly-in-string"
  description: "disallow template literal placeholder syntax in regular strings"
 "eslint-rule/no-ternary":
  prefix: "no-ternary"
  body: "no-ternary"
  description: "disallow ternary operators"
 "eslint-rule/no-this-before-super":
  prefix: "no-this-before-super"
  body: "no-this-before-super"
  description: "disallow `this`/`super` before calling `super()` in constructors"
 "eslint-rule/no-throw-literal":
  prefix: "no-throw-literal"
  body: "no-throw-literal"
  description: "disallow throwing literals as exceptions"
 "eslint-rule/no-trailing-spaces":
  prefix: "no-trailing-spaces"
  body: "no-trailing-spaces"
  description: "disallow trailing whitespace at the end of lines"
 "eslint-rule/no-undef-init":
  prefix: "no-undef-init"
  body: "no-undef-init"
  description: "disallow initializing variables to `undefined`"
 "eslint-rule/no-undef":
  prefix: "no-undef"
  body: "no-undef"
  description: "disallow the use of undeclared variables unless mentioned in `/*global */` comments"
 "eslint-rule/no-undefined":
  prefix: "no-undefined"
  body: "no-undefined"
  description: "disallow the use of `undefined` as an identifier"
 "eslint-rule/no-underscore-dangle":
  prefix: "no-underscore-dangle"
  body: "no-underscore-dangle"
  description: "disallow dangling underscores in identifiers"
 "eslint-rule/no-unexpected-multiline":
  prefix: "no-unexpected-multiline"
  body: "no-unexpected-multiline"
  description: "disallow confusing multiline expressions"
 "eslint-rule/no-unmodified-loop-condition":
  prefix: "no-unmodified-loop-condition"
  body: "no-unmodified-loop-condition"
  description: "disallow unmodified loop conditions"
 "eslint-rule/no-unneeded-ternary":
  prefix: "no-unneeded-ternary"
  body: "no-unneeded-ternary"
  description: "disallow ternary operators when simpler alternatives exist"
 "eslint-rule/no-unreachable":
  prefix: "no-unreachable"
  body: "no-unreachable"
  description: "disallow unreachable code after `return`, `throw`, `continue`, and `break` statements"
 "eslint-rule/no-unsafe-finally":
  prefix: "no-unsafe-finally"
  body: "no-unsafe-finally"
  description: "disallow control flow statements in `finally` blocks"
 "eslint-rule/no-unsafe-negation":
  prefix: "no-unsafe-negation"
  body: "no-unsafe-negation"
  description: "disallow negating the left operand of relational operators"
 "eslint-rule/no-unused-expressions":
  prefix: "no-unused-expressions"
  body: "no-unused-expressions"
  description: "disallow unused expressions"
 "eslint-rule/no-unused-labels":
  prefix: "no-unused-labels"
  body: "no-unused-labels"
  description: "disallow unused labels"
 "eslint-rule/no-unused-vars":
  prefix: "no-unused-vars"
  body: "no-unused-vars"
  description: "disallow unused variables"
 "eslint-rule/no-use-before-define":
  prefix: "no-use-before-define"
  body: "no-use-before-define"
  description: "disallow the use of variables before they are defined"
 "eslint-rule/no-useless-call":
  prefix: "no-useless-call"
  body: "no-useless-call"
  description: "disallow unnecessary calls to `.call()` and `.apply()`"
 "eslint-rule/no-useless-computed-key":
  prefix: "no-useless-computed-key"
  body: "no-useless-computed-key"
  description: "disallow unnecessary computed property keys in object literals"
 "eslint-rule/no-useless-concat":
  prefix: "no-useless-concat"
  body: "no-useless-concat"
  description: "disallow unnecessary concatenation of literals or template literals"
 "eslint-rule/no-useless-constructor":
  prefix: "no-useless-constructor"
  body: "no-useless-constructor"
  description: "disallow unnecessary constructors"
 "eslint-rule/no-useless-escape":
  prefix: "no-useless-escape"
  body: "no-useless-escape"
  description: "disallow unnecessary escape characters"
 "eslint-rule/no-useless-rename":
  prefix: "no-useless-rename"
  body: "no-useless-rename"
  description: "disallow renaming import, export, and destructured assignments to the same name"
 "eslint-rule/no-useless-return":
  prefix: "no-useless-return"
  body: "no-useless-return"
  description: "disallow redundant return statements"
 "eslint-rule/no-var":
  prefix: "no-var"
  body: "no-var"
  description: "require `let` or `const` instead of `var`"
 "eslint-rule/no-void":
  prefix: "no-void"
  body: "no-void"
  description: "disallow `void` operators"
 "eslint-rule/no-warning-comments":
  prefix: "no-warning-comments"
  body: "no-warning-comments"
  description: "disallow specified warning terms in comments"
 "eslint-rule/no-whitespace-before-property":
  prefix: "no-whitespace-before-property"
  body: "no-whitespace-before-property"
  description: "disallow whitespace before properties"
 "eslint-rule/no-with":
  prefix: "no-with"
  body: "no-with"
  description: "disallow `with` statements"
 "eslint-rule/nonblock-statement-body-position":
  prefix: "nonblock-statement-body-position"
  body: "nonblock-statement-body-position"
  description: "enforce the location of single-line statements"
 "eslint-rule/object-curly-newline":
  prefix: "object-curly-newline"
  body: "object-curly-newline"
  description: "enforce consistent line breaks inside braces"
 "eslint-rule/object-curly-spacing":
  prefix: "object-curly-spacing"
  body: "object-curly-spacing"
  description: "enforce consistent spacing inside braces"
 "eslint-rule/object-property-newline":
  prefix: "object-property-newline"
  body: "object-property-newline"
  description: "enforce placing object properties on separate lines"
 "eslint-rule/object-shorthand":
  prefix: "object-shorthand"
  body: "object-shorthand"
  description: "require or disallow method and property shorthand syntax for object literals"
 "eslint-rule/one-var-declaration-per-line":
  prefix: "one-var-declaration-per-line"
  body: "one-var-declaration-per-line"
  description: "require or disallow newlines around variable declarations"
 "eslint-rule/one-var":
  prefix: "one-var"
  body: "one-var"
  description: "enforce variables to be declared either together or separately in functions"
 "eslint-rule/operator-assignment":
  prefix: "operator-assignment"
  body: "operator-assignment"
  description: "require or disallow assignment operator shorthand where possible"
 "eslint-rule/operator-linebreak":
  prefix: "operator-linebreak"
  body: "operator-linebreak"
  description: "enforce consistent linebreak style for operators"
 "eslint-rule/padded-blocks":
  prefix: "padded-blocks"
  body: "padded-blocks"
  description: "require or disallow padding within blocks"
 "eslint-rule/padding-line-between-statements":
  prefix: "padding-line-between-statements"
  body: "padding-line-between-statements"
  description: "require or disallow padding lines between statements"
 "eslint-rule/prefer-arrow-callback":
  prefix: "prefer-arrow-callback"
  body: "prefer-arrow-callback"
  description: "require arrow functions as callbacks"
 "eslint-rule/prefer-const":
  prefix: "prefer-const"
  body: "prefer-const"
  description: "require `const` declarations for variables that are never reassigned after declared"
 "eslint-rule/prefer-destructuring":
  prefix: "prefer-destructuring"
  body: "prefer-destructuring"
  description: "require destructuring from arrays and/or objects"
 "eslint-rule/prefer-numeric-literals":
  prefix: "prefer-numeric-literals"
  body: "prefer-numeric-literals"
  description: "disallow `parseInt()` in favor of binary, octal, and hexadecimal literals"
 "eslint-rule/prefer-promise-reject-errors":
  prefix: "prefer-promise-reject-errors"
  body: "prefer-promise-reject-errors"
  description: "require using Error objects as Promise rejection reasons"
 "eslint-rule/prefer-rest-params":
  prefix: "prefer-rest-params"
  body: "prefer-rest-params"
  description: "require rest parameters instead of `arguments`"
 "eslint-rule/prefer-spread":
  prefix: "prefer-spread"
  body: "prefer-spread"
  description: "require spread operators instead of `.apply()`"
 "eslint-rule/prefer-template":
  prefix: "prefer-template"
  body: "prefer-template"
  description: "require template literals instead of string concatenation"
 "eslint-rule/quote-props":
  prefix: "quote-props"
  body: "quote-props"
  description: "require quotes around object literal property names"
 "eslint-rule/quotes":
  prefix: "quotes"
  body: "quotes"
  description: "enforce the consistent use of either backticks, double, or single quotes"
 "eslint-rule/radix":
  prefix: "radix"
  body: "radix"
  description: "enforce the consistent use of the radix argument when using `parseInt()`"
 "eslint-rule/require-await":
  prefix: "require-await"
  body: "require-await"
  description: "disallow async functions which have no `await` expression"
 "eslint-rule/require-jsdoc":
  prefix: "require-jsdoc"
  body: "require-jsdoc"
  description: "require JSDoc comments"
 "eslint-rule/require-yield":
  prefix: "require-yield"
  body: "require-yield"
  description: "require generator functions to contain `yield`"
 "eslint-rule/rest-spread-spacing":
  prefix: "rest-spread-spacing"
  body: "rest-spread-spacing"
  description: "enforce spacing between rest and spread operators and their expressions"
 "eslint-rule/semi-spacing":
  prefix: "semi-spacing"
  body: "semi-spacing"
  description: "enforce consistent spacing before and after semicolons"
 "eslint-rule/semi-style":
  prefix: "semi-style"
  body: "semi-style"
  description: "enforce location of semicolons"
 "eslint-rule/semi":
  prefix: "semi"
  body: "semi"
  description: "require or disallow semicolons instead of ASI"
 "eslint-rule/sort-imports":
  prefix: "sort-imports"
  body: "sort-imports"
  description: "enforce sorted import declarations within modules"
 "eslint-rule/sort-keys":
  prefix: "sort-keys"
  body: "sort-keys"
  description: "require object keys to be sorted"
 "eslint-rule/sort-vars":
  prefix: "sort-vars"
  body: "sort-vars"
  description: "require variables within the same declaration block to be sorted"
 "eslint-rule/space-before-blocks":
  prefix: "space-before-blocks"
  body: "space-before-blocks"
  description: "enforce consistent spacing before blocks"
 "eslint-rule/space-before-function-paren":
  prefix: "space-before-function-paren"
  body: "space-before-function-paren"
  description: "enforce consistent spacing before `function` definition opening parenthesis"
 "eslint-rule/space-in-parens":
  prefix: "space-in-parens"
  body: "space-in-parens"
  description: "enforce consistent spacing inside parentheses"
 "eslint-rule/space-infix-ops":
  prefix: "space-infix-ops"
  body: "space-infix-ops"
  description: "require spacing around infix operators"
 "eslint-rule/space-unary-ops":
  prefix: "space-unary-ops"
  body: "space-unary-ops"
  description: "enforce consistent spacing before or after unary operators"
 "eslint-rule/spaced-comment":
  prefix: "spaced-comment"
  body: "spaced-comment"
  description: "enforce consistent spacing after the `//` or `/*` in a comment"
 "eslint-rule/strict":
  prefix: "strict"
  body: "strict"
  description: "require or disallow strict mode directives"
 "eslint-rule/switch-colon-spacing":
  prefix: "switch-colon-spacing"
  body: "switch-colon-spacing"
  description: "enforce spacing around colons of switch statements"
 "eslint-rule/symbol-description":
  prefix: "symbol-description"
  body: "symbol-description"
  description: "require symbol descriptions"
 "eslint-rule/template-curly-spacing":
  prefix: "template-curly-spacing"
  body: "template-curly-spacing"
  description: "require or disallow spacing around embedded expressions of template strings"
 "eslint-rule/template-tag-spacing":
  prefix: "template-tag-spacing"
  body: "template-tag-spacing"
  description: "require or disallow spacing between template tags and their literals"
 "eslint-rule/unicode-bom":
  prefix: "unicode-bom"
  body: "unicode-bom"
  description: "require or disallow Unicode byte order mark (BOM)"
 "eslint-rule/use-isnan":
  prefix: "use-isnan"
  body: "use-isnan"
  description: "require calls to `isNaN()` when checking for `NaN`"
 "eslint-rule/valid-jsdoc":
  prefix: "valid-jsdoc"
  body: "valid-jsdoc"
  description: "enforce valid JSDoc comments"
 "eslint-rule/valid-typeof":
  prefix: "valid-typeof"
  body: "valid-typeof"
  description: "enforce comparing `typeof` expressions against valid strings"
 "eslint-rule/vars-on-top":
  prefix: "vars-on-top"
  body: "vars-on-top"
  description: "require `var` declarations be placed at the top of their containing scope"
 "eslint-rule/wrap-iife":
  prefix: "wrap-iife"
  body: "wrap-iife"
  description: "require parentheses around immediate `function` invocations"
 "eslint-rule/wrap-regex":
  prefix: "wrap-regex"
  body: "wrap-regex"
  description: "require parenthesis around regex literals"
 "eslint-rule/yield-star-spacing":
  prefix: "yield-star-spacing"
  body: "yield-star-spacing"
  description: "require or disallow spacing around the `*` in `yield*` expressions"
 "eslint-rule/yoda":
  prefix: "yoda"
  body: "yoda"
  description: "require or disallow \"Yoda\" conditions"